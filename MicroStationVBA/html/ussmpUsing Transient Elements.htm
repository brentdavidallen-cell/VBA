<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using Transient Elements</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Using Transient Elements</H1>

<P class=T>
Demonstrates how to use a <A href="usobjTransientElementContainer.htm">TransientElementContainer</A> to display temporary elements that
                have not been added to a model.
</P>
<P class=T>
Copy this code into a module
                and run the methods ShowTransientElements1, ShowTransientElements2, and  
                ClearDisplay to run this example.
</P>
<PRE class=CT><CODE>
Dim tec1 As TransientElementContainer

Sub ShowTransientElements1()
    Dim ele As <A href="usobjLineElement.htm">LineElement</A>
    Dim flags As <A href="usenmMsdTransientFlags.htm">MsdTransientFlags</A>

    '
    '   Use this pair of flags to make the elements in the container snappable and
    '   to make them display on top of other elements
    '
    flags = msdTransientFlagsOverlay + msdTransientFlagsSnappable

    Set ele = <A href="usmthCreateLineElement2.htm">CreateLineElement2</A>(Nothing, <A href="usmthPoint3dFromXYZ.htm">Point3dFromXYZ</A>(15.696, 25.045, -0.64), <A href="usmthPoint3dFromXY.htm">Point3dFromXY</A>(20.194, 23.7592))
    ''
    ''  Create a new container and put a copy of the element into it.  The container holds a copy;
    ''  changes to the original element are not displayed.
    ''
    Set tec1 = <A href="usmthCreateTransientElementContainer1.htm">CreateTransientElementContainer1</A>(ele, flags, msdViewAll, msdDrawingModeHilite)

    ''
    ''  Create anther element and append a copy of another element to the container.
    ''  Changes to the original element are not displayed.
    ''
    Set ele = CreateLineElement2(Nothing, Point3dFromXYZ(15.696, 23.759, -0.64), Point3dFromXY(20.194, 25.045))
    tec1.<A href="usmthAppendCopyOfElement.htm">AppendCopyOfElement</A> ele

End Sub
Sub ShowTransientElements2()
    Dim ele As LineElement
    Dim flags As MsdTransientFlags

    ''
    ''  Since this overwrites the only reference to tec1, tec1 is automatically freed. That process frees
    ''  the elements and erases the elements from the display.
    ''
    ''  This creates a container with no elements. Subsequent steps add the elements.
    ''
    Set tec1 = CreateTransientElementContainer1(Nothing, flags, msdView1 + msdView4, msdDrawingModeNormal)

    ''
    '' Now create and add the elements.
    ''
    Set ele = CreateLineElement2(Nothing, Point3dFromXYZ(15.696, 25.045, -0.64), Point3dFromXY(20.194, 23.759))
    tec1.AppendCopyOfElement ele

    Set ele = CreateLineElement2(Nothing, Point3dFromXYZ(15.696, 23.759, -0.64), Point3dFromXY(20.194, 25.045))
    tec1.AppendCopyOfElement ele

    Set ele = CreateLineElement2(Nothing, Point3dFromXYZ(15.696, 25.045, -0.64), Point3dFromXY(20.194, 25.045))
    tec1.AppendCopyOfElement ele

    Set ele = CreateLineElement2(Nothing, Point3dFromXYZ(15.696, 23.759, -0.64), Point3dFromXY(20.194, 23.759))
    tec1.AppendCopyOfElement ele
End Sub

Sub ClearDisplay()
    ''
    ''  Since this eliminates the only reference, MicroStation automatically invokes <A href="usmthReset.htm">Reset</A>.
    ''  Therefore, it erases the elements and frees the copies of the elements.
    ''
    Set tec1 = Nothing
End Sub

</CODE></PRE>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CreateTextNodeElement2 Method</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<H1 class=RH1><A NAME="usmthcreatetextnodeelement2"></A>CreateTextNodeElement2 Method</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_2139" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthCreateTextNodeElement2C">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2140" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthCreateTextNodeElement2X">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2141" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthCreateTextNodeElement2A">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2142" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthCreateTextNodeElement2S">
</OBJECT>
</P>

<P class=T>
Creates and initializes a new <A href="usobjTextNodeElement.htm">TextNodeElement</A> object.
</P>
<P class=RL><B>Syntax</B></P>
<P class=SYN><B>Set</B> <I><B>TextNodeElement</B></I> = <I>object</I>.<B>CreateTextNodeElement2</B> (<I>Template</I>, <I>Origin</I>, <I>Rotation</I> [, <I>IncrementNodeNumber</I> [, <I>Reserved</I>]])
<P class=T>The <B>CreateTextNodeElement2</B> method syntax has these parts:</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Part</TH>
<TH width=79%>Description</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>object</I></TD>
<TD class=TT width=79%%>A valid object.</TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Template</I></TD>
<TD class=TT width=79%>
An <A href="usobjElement.htm">Element</A> expression. An existing element whose settings are used to initialize the new element.
    If <B>Nothing</B>, the new element's settings are initialized from MicroStation's active settings.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Origin</I></TD>
<TD class=TT width=79%>
A <A href="usudtPoint3d.htm">Point3d</A> expression. The element's origin.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Rotation</I></TD>
<TD class=TT width=79%>
A <A href="usudtMatrix3d.htm">Matrix3d</A> expression. The element's rotation. For no rotation, specify <A href="usmthMatrix3dIdentity.htm">Matrix3dIdentity</A>.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>IncrementNodeNumber</I></TD>
<TD class=TT width=79%>
Optional. A <B>Boolean</B> expression. Controls how <B>CreateTextNodeElement2</B> handles the text node number. The default value for this argument is <B>True</B>.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Reserved</I></TD>
<TD class=TT width=79%>
Optional. An <B>Object</B> expression. This is reserved for additional parameters in a future release.  Currently, this ignored.  Since it is an optional argument, a
    program does not have to specify anything.  If the program does specify an argument, it should pass <B>Nothing</B>.
</TR>
</TABLE><BR>
<P class=RL><B>Remarks</B></P>

<P>
If <B>IncrementNodeNumber</B> is <B>True</B>, <B>CreateTextNodeElement2</B> uses the system's current text node number and increments it.
    If <B>IncrementNodeNumber</B> is <B>False</B> and <B>Template</B> is <B>Nothing</B> then  <B>CreateTextNodeElement2</B> uses the system's current text
    node number but does not increment it. If <B>IncrementNodeNumber</B> is <B>False</B> and <B>Template</B> is not <B>Nothing</B> then
    <B>CreateTextNodeElement2</B> copies the text node number from the template element.
</P>
<P>
If a program creates new text node elements in both the draw and erase sides of dynamics and it lets <B>CreateTextNodeElement2</B>
    increment the text node number, then the erase side erases a different text node number than what the draw side draws.
    In a view that has <A href="usproDisplayTextNodes.htm">DisplayTextNodes</A> enabled, that leaves remnants of the the old text node number in the view.
</P>
<P>
The following example shows a strategy for dealing with this:
<code><pre>
Private Sub IPrimitiveCommandEvents_DataPoint(Point As Point3d, ByVal View As View)
    Dim tn As TextNodeElement

    ' Use the current text node number
    Set tn = CreateTextNodeElement2(Nothing, Point, View.Rotation, False)
    tn.AddTextLine "Hello"
    tn.AddTextLine "World"
    ActiveModelReference.AddElement tn
    tn.Redraw

    CommandState.StartPrimitive Me
End Sub

Private Sub IPrimitiveCommandEvents_Dynamics(Point As Point3d, ByVal View As View, ByVal DrawMode As MsdDrawingMode)
    Dim tn As TextNodeElement

    ' Use the current text node number
    Set tn = CreateTextNodeElement2(Nothing, Point, View.Rotation, False)
    tn.AddTextLine "Hello"
    tn.AddTextLine "World"
    tn.Redraw DrawMode
End Sub
Private Sub IPrimitiveCommandEvents_Start()
    ''
    ''  Make this call to bump the text node number and then in all subsequent calls
    ''  to CreateTextNodeElement2 specify False for the IncrementNodeNumber
    ''  argument.
    ''
    CreateTextNodeElement2 Nothing, Point3dZero, Matrix3dIdentity, True
    CommandState.StartDynamics
End Sub
</pre></code>
</P>
<P>
<B>Important:</B> The geometric arguments are given in the coordinate system of the <I>currently active</I> model.
    Therefore, before you call this method, you should ensure that the model to which you intend to add the element is the <I>active</I> model. (You can
    make a model active by calling the <A href="usmthActivate.htm">Activate</A> method of the appropriate <A href="usobjModelReference.htm">ModelReference</A> object.)
</P>
<P class=RL><B>Version</B></P>
<P>
08.01.02
</P>
</BODY>
</HTML>

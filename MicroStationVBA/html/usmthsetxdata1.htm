<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetXData1 Method</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<H1 class=RH1><A NAME="usmthsetxdata1"></A>SetXData1 Method</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_5039" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthSetXData1C">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_5040" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthSetXData1X">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_5041" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthSetXData1A">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_5042" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthSetXData1S">
</OBJECT>
</P>

<P class=T>
Assigns new XData for a given application name on this object. It replaces any existing XData for this application name on this object.
    The object may be any type of graphical element or a <A href="usobjModelReference.htm">ModelReference</A>.
</P>
<P class=RL><B>Syntax</B></P>
<P class=SYN><I>object</I>.<B>SetXData1</B> <I>ApplicationName</I>, <I>NewXData</I>
<P class=T>The <B>SetXData1</B> method syntax has these parts:</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Part</TH>
<TH width=79%>Description</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>object</I></TD>
<TD class=TT width=79%%>A valid object.</TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>ApplicationName</I></TD>
<TD class=TT width=79%>
A <B>String</B> expression. 
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>NewXData</I></TD>
<TD class=TT width=79%>
A <A href="usobjXDataObject.htm">XDataObject</A> expression. 
</TR>
</TABLE><BR>
<P class=RL><B>Remarks</B></P>

<P>
<B>SetXData1</B> performs the same function as <A href="usmthSetXData.htm">SetXData</A>, but <B>SetXData1</B> gets the XData definition from an <B>XDataObject</B> object while
    <B>SetXData</B> gets the XData definition from an array of <A href="usudtXDatum.htm">XDatum</A> UDTs. See <B>XDataObject</B> for a discussion of why the MicroStationDGN object model
    supports two techniques for accessing XData. This information is particularly important for .NET programs using .NET COM interop to access
    the MicroStationDGN object model.
</P>
<P>
If <B>NewXData.Count</B> is 0, calling this method has the same effect as calling <A href="usmthDeleteXData.htm">DeleteXData</A>.
</P>
<P>
To change or extend an object's <I>existing</I> XData, use <A href="usmthGetXData1.htm">GetXData1</A> to get an <B>XDataObject</B>, change it, then use <B>SetXData1</B> to put the
    revised XData.  This technique can also be used to initialize an element's XData, since <B>GetXData1</B> always returns a valid <B>XDataObject</B>.
    Even if the element of model does not have XData, the program can call <B>GetXData1</B> to get <B>XDataObject</B> that has a <B>Count</B> of 0,
    add the XData to it, and then call <B>SetXData1</B> to save the changes to the element or model.
</P>
<P>
Calling <B>SetXData1</B> for an element type raises an error if the element is not graphical.
    If you're in doubt, firstly check the element's <A href="usproIsGraphical.htm">IsGraphical</A> property.
</P>
<P class=RL><B>Version</B></P>
<P>
08.09.02
</P>
</BODY>
</HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Rotating an Element Example</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Rotating an Element Example</H1>

<P class=T>
This example illustrates a technique for rotating an element in MicroStation by generating and applying a
            <A href="usudtTransform3d.htm">Transform3d</A>.
</P>
<P class=T>
This example uses <A href="usmthMatrix3dFromVectorAndRotationAngle.htm">Matrix3dFromVectorAndRotationAngle</A> to create a rotation matrix that rotates about the Z direction.
            Then it uses <A href="usmthTransform3dFromMatrix3dAndFixedPoint3d.htm">Transform3dFromMatrix3dAndFixedPoint3d</A> to create a transformation matrix that applies that transformation
            about a fixed point.  Then it uses Transform to apply the transform to the element.
</P>
<PRE class=CT><CODE>
Sub RotateElementAboutZ(ele As <A href="usobjElement.htm">Element</A>, pntFixed As <A href="usudtPoint3d.htm">Point3d</A>, dblRadians As Double)
    Dim RotationMatrix As <A href="usudtMatrix3d.htm">Matrix3d</A>
    Dim Eltrans As Transform3d

    '  Create a rotation matrix for rotating with the Z direction fixed.
    Dim Axis As Point3d
    Axis.X = 0
    Axis.Y = 0
    Axis.Z = 1
    RotationMatrix = Matrix3dFromVectorAndRotationAngle(Axis, dblRadians)

    Eltrans = Transform3dFromMatrix3dAndFixedPoint3d(RotationMatrix, pntFixed)

    '  Apply the transform to rotate the element
    ele.<A href="usmthTransform.htm">Transform</A> Eltrans
End Sub


Sub RotateText()
    If Not <A href="usproActiveModelReference.htm">ActiveModelReference</A>.<A href="usproAnyElementsSelected.htm">AnyElementsSelected</A> Then
        <A href="usmthShowError.htm">ShowError</A> "The macro requires a selection set"
        Exit Sub
    End If

    Dim <A href="usproAngle.htm">Angle</A> As Double
    Angle = <A href="usmthRadians.htm">Radians</A>(45)

    ' now transform selected elements
    Dim oElEnum As <A href="usobjElementEnumerator.htm">ElementEnumerator</A>
    Set oElEnum = ActiveModelReference.<A href="usmthGetSelectedElements.htm">GetSelectedElements</A>  ' get the selected elements

    While oElEnum.<A href="usmthMoveNext.htm">MoveNext</A>
        If oElEnum.<A href="usproCurrent.htm">Current</A>.<A href="usproType.htm">Type</A> = msdElementTypeText Then
            With oElEnum.Current.<A href="usproAsTextElement.htm">AsTextElement</A>
                .<A href="usmthRedraw.htm">Redraw</A> msdDrawingModeErase
                RotateElementAboutZ oElEnum.Current, .<A href="usproOrigin.htm">Origin</A>, Angle

                .<A href="usmthRewrite.htm">Rewrite</A>
                .Redraw
            End With
        End If
    Wend

    <A href="usmthShowPrompt.htm">ShowPrompt</A> "Done"
End Sub

</CODE></PRE>

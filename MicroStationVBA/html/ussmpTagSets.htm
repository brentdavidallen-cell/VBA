<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Tag Sets, Tag Definitions, and Tag Elements Example</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Tag Sets, Tag Definitions, and Tag Elements Example</H1>

<P class=T>
The macro DoExample calls the other subroutines and functions to manage tag sets,
            tag definitions, and to create tag elements.
</P>
<PRE class=CT><CODE>
'  Find or the specified tag set.
Function GetTagSet(strName As String) As <A href="usobjTagSet.htm">TagSet</A>
    Dim oTagSets As <A href="usobjTagSets.htm">TagSets</A>

    Set oTagSets = <A href="usproActiveDesignFile.htm">ActiveDesignFile</A>.<A href="usproTagSets.htm">TagSets</A>
    On Error Resume Next
    Set GetTagSet = oTagSets(strName)
    If GetTagSet Is Nothing Then Set GetTagSet = oTagSets.<A href="usmthAdd.htm">Add</A>(strName)
End Function

Sub AddTagDefinitions(oTagSet As TagSet)
    Dim oDefs As <A href="usobjTagDefinitions.htm">TagDefinitions</A>
    Dim oTagDef As <A href="usobjTagDefinition.htm">TagDefinition</A>

    Set oDefs = oTagSet.<A href="usproTagDefinitions.htm">TagDefinitions</A>
    Set oTagDef = oDefs.Add("StringTag", msdTagTypeCharacter)

    With oTagDef
        '  Now print out the initial values for the tag definition properties
        Debug.Print "DefaultValue is " & .<A href="usproDefaultValue.htm">DefaultValue</A>
        Debug.Print "IsConstant is " & .<A href="usproIsConstant.htm">IsConstant</A>
        Debug.Print "IsHidden is " & .<A href="usproIsHidden.htm">IsHidden</A>
        Debug.Print "Name is " & .<A href="usproName.htm">Name</A>
        Debug.Print "Prompt is " & .<A href="usproPrompt.htm">Prompt</A>
        Debug.Print "TagSetName is " & .<A href="usproTagSetName.htm">TagSetName</A>
        Debug.Print "TagType is " & .<A href="usproTagType.htm">TagType</A>

        .IsConstant = True
        .DefaultValue = "THIS IS A CONSTANT VALUE"
    End With

    Set oTagDef = oDefs.Add("DoubleTag", msdTagTypeDouble)
    With oTagDef
        .DefaultValue = 17.5
        .IsConstant = False
        .Prompt = "Enter a double value"
    End With
    Set oTagDef = oDefs.Add("LongTag", msdTagTypeLongInteger)
    With oTagDef
        .DefaultValue = 70000
        .IsConstant = False
        .Prompt = "Enter an integer value"
    End With
End Sub

Sub RemoveAttributeSet(dgn As <A href="usobjDesignFile.htm">DesignFile</A>, strName As String)
    On Error Resume Next '  Consume the error if it is not there
    dgn.TagSets.<A href="usmthRemove.htm">Remove</A> (strName)
End Sub

Sub TagElementWithSet(ele As <A href="usobjElement.htm">Element</A>, tset As TagSet)
    Dim index As Integer
    Dim tags() As <A href="usobjTagElement.htm">TagElement</A>

    tags = ele.<A href="usmthAddTags.htm">AddTags</A>(tset)
    For index = LBound(tags) To UBound(tags)
        With tags(index)
            .<A href="usmthMove.htm">Move</A> <A href="usmthPoint3dFromXY.htm">Point3dFromXY</A>(0, index + 1)
            .<A href="usmthRedraw.htm">Redraw</A>
            '  AddTags added it to the model.  Rewrite it now
            '  since it has been moved.
            .<A href="usmthRewrite.htm">Rewrite</A>
        End With
    Next
End Sub

Sub DoExample()
    Dim oTagSet As TagSet
    Dim strTagSetName As String
    Dim ele As <A href="usobjLineElement.htm">LineElement</A>

    strTagSetName = "VbaExample"

    RemoveAttributeSet ActiveDesignFile, strTagSetName

    Set oTagSet = GetTagSet(strTagSetName)
    AddTagDefinitions oTagSet

    '  Create the element to tag
    Set ele = <A href="usmthCreateLineElement2.htm">CreateLineElement2</A>(Nothing, Point3dFromXY(0, 0), Point3dFromXY(100, 0))
    ele.Redraw
    <A href="usproActiveModelReference.htm">ActiveModelReference</A>.<A href="usmthAddElement.htm">AddElement</A> ele

    TagElementWithSet ele, oTagSet
End Sub

</CODE></PRE>

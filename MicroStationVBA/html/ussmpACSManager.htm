<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Controlling the Auxiliary Coordinate System</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Controlling the Auxiliary Coordinate System</H1>

<PRE class=CT><CODE>
'
'  Keep the current ACS origin and type the same, but change to the View's rotation
'
Sub SetToViewRotation()
    <A href="usproACSManager.htm">ACSManager</A>.<A href="usmthDefineACS.htm">DefineACS</A> ACSManager.<A href="usproOrigin.htm">Origin</A>, <A href="usproActiveDesignFile.htm">ActiveDesignFile</A>.<A href="usproViews.htm">Views</A>(2).<A href="usproRotation.htm">Rotation</A>, ACSManager.<A href="usproACSType.htm">ACSType</A>
End Sub
'
'  Keep the current ACS rotation and type the same, but change to the View's origin
'
Sub SetToViewOrigin()
    With ACSManager
        .DefineACS ActiveDesignFile.Views(2).Origin, .Rotation, .ACSType
    End With
End Sub

Function GetACSType(ACSType As <A href="usenmMsdACSType.htm">MsdACSType</A>) As String
    If ACSType = msdACSTypeCylindrical Then GetACSType = "Cylindrical"
    If ACSType = msdACSTypeNone Then GetACSType = "None"
    If ACSType = msdACSTypeRectangular Then GetACSType = "Rectangular"
    If ACSType = msdACSTypeSpherical Then GetACSType = "Spherical"
End Function
'
'  If there is an ACS currently defined, dump all of the properties
'
Sub DisplayCurrentACS()
    With ACSManager
        If .<A href="usproIsDefined.htm">IsDefined</A> Then
            Dim org As <A href="usudtPoint3d.htm">Point3d</A>
            Dim mtrx As <A href="usudtMatrix3d.htm">Matrix3d</A>
            Dim xRotation As Double
            Dim yRotation As Double
            Dim zRotation As Double
            Dim dScale As Double

            Debug.Print "ACS type is " & GetACSType(.ACSType)
            If .<A href="usproName.htm">Name</A> &lt;&gt; "" Then Debug.Print "Name is " & .Name
            If .<A href="usproDescription.htm">Description</A> &lt;&gt; "" Then Debug.Print "Description is " & .Description

            org = .Origin
            Debug.Print "Origin is (" & org.X & ", " & org.Y & ", " & org.Z & ")"
            mtrx = .Rotation
            If <A href="usmthMatrix3dIsXYRotation.htm">Matrix3dIsXYRotation</A>(mtrx, xRotation) Then
                Debug.Print "Have XY rotation of " & <A href="usmthDegrees.htm">Degrees</A>(xRotation)
            ElseIf <A href="usmthMatrix3dIsXRotationYRotationZRotationScale.htm">Matrix3dIsXRotationYRotationZRotationScale</A>(mtrx, xRotation, yRotation, zRotation, dScale) Then
                Debug.Print "xRotation " & Degrees(xRotation) & ", yRotation " & Degrees(yRotation) & ", zRotation " & Degrees(zRotation)
            End If
        End If
    End With
End Sub

Sub DisableACS()
    ACSManager.ACSType = msdACSTypeNone
End Sub

Sub AttachACS()
    ACSManager.<A href="usmthAttachNamed.htm">AttachNamed</A> "View1ACS", True, True
End Sub

Sub DeleteACS()
    ACSManager.<A href="usmthDeleteNamed.htm">DeleteNamed</A> "View1ACS"
End Sub
'
'
' Moves the ACS 4 master units in the Z-direction
'
Sub MoveACS()
    With ACSManager
        Dim savedName As String
        Dim savedDesc As String

        savedName = .Name
        savedDesc = .Description

        .DefineACS <A href="usmthPoint3dAdd.htm">Point3dAdd</A>(.Origin, <A href="usmthPoint3dFromXYZ.htm">Point3dFromXYZ</A>(0, 0, 4)), .Rotation, .ACSType
        If savedName &lt;&gt; "" Then
            .<A href="usmthSaveActive.htm">SaveActive</A> savedName, savedDesc, True
        End If
    End With
End Sub
'
'   Use the scanning shortcut DoScanForACSElements
'   to get all of the model's AuxiliaryCoordinateSystemElement's
'
Sub ListACSElements()
    Dim ee As <A href="usobjElementEnumerator.htm">ElementEnumerator</A>
    Dim ele As <A href="usobjAuxiliaryCoordinateSystemElement.htm">AuxiliaryCoordinateSystemElement</A>

    Set ee = ACSManager.<A href="usmthScanForACSElements.htm">ScanForACSElements</A>

    Do While ee.<A href="usmthMoveNext.htm">MoveNext</A>
        Set ele = ee.<A href="usproCurrent.htm">Current</A>
        Debug.Print "Name " & ele.Name
        Debug.Print "Descr " & ele.Description
    Loop
End Sub

</CODE></PRE>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Application Element Example</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Application Element Example</H1>

<P class=T>
AddAppElement shows how to create an <A href="usobjApplicationElement.htm">ApplicationElement</A>.
            ListMyApplicationData shows how to scan for and interpret
            <B>ApplicationElement</B>s. DeleteMyAppElements shows how to scan
            for and delete <B>ApplicationElement</B>s. UpdateMyAppElements finds
            and updates <B>ApplicationElement</B>s.
</P>
<PRE class=CT><CODE>
Const myID As Long = 22526
'
'  This Sub transfers the application data to and from the DataBlock
'  Both AddAppElement and ListMyApplicationData use this
Sub TransferDataBlock(db As <A href="usobjDataBlock.htm">DataBlock</A>, toBlock As Boolean, strCompanyID As String, _
                            strTopic As String, strWhen As String, data As Long)
    db.<A href="usmthOffset.htm">Offset</A> = 0
    db.<A href="usmthCopyString.htm">CopyString</A> strCompanyID, toBlock
    db.CopyString strTopic, toBlock
    db.CopyString strWhen, toBlock
    db.<A href="usmthCopyLong.htm">CopyLong</A> data, toBlock
End Sub
'
' Creates an application element
'
Sub AddAppElement()
    Dim ae As ApplicationElement
    Dim db As New DataBlock

    TransferDataBlock db, True, "com.bentley", "Application Element Example", Date & " " & Time, 1000
    '  CreateApplicationElement transfers all of the data
    '  from the DataBlock to the application element
    Set ae = <A href="usmthCreateApplicationElement.htm">CreateApplicationElement</A>(myID, db)

    <A href="usproActiveModelReference.htm">ActiveModelReference</A>.<A href="usmthAddElement.htm">AddElement</A> ae
End Sub
'
'   Finds application elements
'
Sub ListMyApplicationData()
    Dim ee As <A href="usobjElementEnumerator.htm">ElementEnumerator</A>

    Set ee = ActiveModelReference.<A href="usproControlElementCache.htm">ControlElementCache</A>.<A href="usmthScan.htm">Scan</A>
    Do While ee.<A href="usmthMoveNext.htm">MoveNext</A>
        If msdElementTypeMicroStation = ee.<A href="usproCurrent.htm">Current</A>.<A href="usproType.htm">Type</A> And ee.Current.<A href="usproSubtype.htm">Subtype</A> = msdElementSubtypeApplicationElement Then
            Dim ae As ApplicationElement

            Set ae = ee.Current
            If ae.<A href="usproApplicationID.htm">ApplicationID</A> = myID Then
                Dim data As Long
                Dim strCompanyID As String, strTopic As String, strWhen As String
                Dim dbOut As DataBlock

                '  Get all of the application data into a DataBlock, and then
                '  transfer the data from the DataBlock
                Set dbOut = ae.<A href="usmthGetApplicationData.htm">GetApplicationData</A>
                TransferDataBlock dbOut, False, strCompanyID, strTopic, strWhen, data

                Debug.Print strCompanyID & " -- " & strTopic
                Debug.Print "    Added " & strWhen
                Debug.Print "    " & data
            End If
        End If
    Loop
End Sub
'
'  Deletes application elements
'
Sub DeleteMyAppElements()
    Dim ee As ElementEnumerator

    Set ee = ActiveModelReference.ControlElementCache.Scan
    Do While ee.MoveNext
         If ee.Current.<A href="usproIsApplicationElement.htm">IsApplicationElement</A> Then
            With ee.Current.<A href="usproAsApplicationElement.htm">AsApplicationElement</A>
                If .ApplicationID = myID Then
                    Debug.Print "Deleting application element"
                    ActiveModelReference.<A href="usmthRemoveElement.htm">RemoveElement</A> ee.Current
                End If
            End With
        End If
    Loop
End Sub
'
'  Updates application elements
'
Sub UpdateMyAppElements()
    Dim ee As ElementEnumerator

    Set ee = ActiveModelReference.ControlElementCache.Scan
    Do While ee.MoveNext
         If ee.Current.IsApplicationElement Then
            With ee.Current.AsApplicationElement
                If .ApplicationID = myID Then
                    Dim data As Long
                    Dim strCompanyID As String, strTopic As String, strWhen As String
                    Dim db As DataBlock

                    '  Get the data from the element
                    Set db = .GetApplicationData
                    '  Extract the data from the data block
                    TransferDataBlock db, False, strCompanyID, strTopic, strWhen, data
                    '  Update a few values
                    data = data + 1
                    strWhen = Date & " " & Time
                    '  Put the new values to the data block
                    TransferDataBlock db, True, strCompanyID, strTopic, strWhen, data
                    '  Now save the updated data block to the element and then save
                    '  the element to the design file
                    .<A href="usmthSetApplicationData.htm">SetApplicationData</A> db
                    .<A href="usmthRewrite.htm">Rewrite</A>
                End If
            End With
        End If
    Loop
End Sub



</CODE></PRE>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>View Object</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1><A NAME="usobjview"></A>View Object</H1>

<P>
<P class=ALNSR>
<OBJECT ID="hhobj_1086" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjViewC">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1087" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjViewX">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1088" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Properties">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjViewP">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1089" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Methods">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjViewM">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1090" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Events">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjViewE">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1091" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjViewS">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1092" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Interfaces">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjViewI">
</OBJECT>
</P>

<P class=T>
Represents a MicroStation view.
    <P>A program can use the <A href="usproActiveDesignFile.htm">ActiveDesignFile</A>.<A href="usproViews.htm">Views</A> collection to access the <B>View</B> objects corresponding to
    MicroStation's views. The view number serves as index into the <A href="usobjViews.htm">Views</A> collection so <B>ActiveDesignFile.Views (1)</B> returns the
    <B>View</B> object corresponding to MicroStation's view 1 and <B>ActiveDesignFile.Views (8)</B> returns the
    object corresponding to MicroStation's view 8.  A program can only use the existing <B>View</B> objects; it cannot create a new
    one.</P>
    <P><B>View</B> exposes the following properties that define a <B>View</B>'s display area, orientation, and
    active depth.</P>
    <ul>
    <li><A href="usproOrigin.htm">Origin</A> specifies the point at the lower left corner of the back clipping plane.</li>
    <li><A href="usproExtents.htm">Extents</A> specifies the height, width, and depth of the display area. The coordinates of <B>Extents</B>
    are relative to the <B>View</B>, not the model. Therefore, <B>Extents.X</B> specifies a distance along the <B>View</B>'s
    horizontal axis and <B>Extents.Z</B> specifies a distance along the axis that is perpendicular to the screen.
    <B>Extents.Z</B> specifies the distance along the <B>View</B>'s Z-axis from the back clipping plane to the front clipping plane.</li>
    <li><A href="usproRotation.htm">Rotation</A> specifies the <B>View</B>'s rotation. A program can set a <B>View</B>'s rotation by using the <B>Rotation</B>
    property, or by using one of a set of methods that set the <B>View</B>'s rotation to a standard value. For example, the statements
    <B>vw.Rotation = Matrix3dIdentity</B> and <B>vw.SetToTop</B> are equivalent. Also, the statements
    <B>vw.Rotation = Matrix3dFromAxisAndRotationAngle(0, Pi)</B> and <B>vw.SetToBottom</B> are equivalent.</li>
    <li><A href="usproActiveDepth.htm">ActiveDepth</A> specifies the distance along the <B>View</B>'s Z-axis from the origin to the active depth plane.
    <B>ActiveDepth</B> must be within the <B>View</B>'s display area. Therefore, it must be greater than or equal to 0,
    and less than or equal to <B>Extents</B>.<B>Z</B>.</li>
    </ul>
    <P><B>View</B> also exposes some properties that provide the same information in a way that is consistent
    with MicroStation's user interface.  MicroStation's user interface handles the active depth and distance to clipping planes
    (or equivalently, display depths) in terms of distance from the Global Origin.  Whenever MicroStation needs one of these values,
    it computes the value based on the saved values of <B>Global Origin</B>,
    <B>View.Origin</B>, <B>View.Extents</B>, or <B>View.Rotation</B>, or <B>View.ActiveDepth</B>.
    <ul>
    <li><A href="usproActiveDepthDistanceFromGlobalOrigin.htm">ActiveDepthDistanceFromGlobalOrigin</A> refers to the value that MicroStation's <B>Active Depth</B> commands set and display.
    For example, it gets the same value that <B>AZ=?</B> displays.  This value is the distance along the view's Z axis from
    the Global Origin to the active depth point. </li>
    <li><A href="usproFrontClippingDistanceFromGlobalOrigin.htm">FrontClippingDistanceFromGlobalOrigin</A> and <A href="usproBackClippingDistanceFromGlobalOrigin.htm">BackClippingDistanceFromGlobalOrigin</A> specify the  distance along the view's Z-axis
    from the back clipping plane and the front clipping to the global origin. These are the same
    values that MicroStation <B>DISPLAY DEPTH</B> commands set and display.  For example,  the property
    <B>BackClippingDistanceFromGlobalOrigin</B> gets the first value that <B>DP=?</B> displays and the property
    <B>FrontClippingDistanceFromGlobalOrigin</B> gets the second value that <B>DP=?</B> displays.
    <B>BackClippingDistanceFromGlobalOrigin</B> gets the distance along the <B>View</B>'s Z-axis from the Global Origin
    to the back clipping plane, i.e., the plane that crosses through <B>Origin</B>. If the Global Origin is in front of the
    back clipping plane, then <B>BackClippingDistanceFromGlobalOrigin</B> is negative. If the Global Origin is in back of the
    back clipping plane, then <B>BackClippingDistanceFromGlobalOrigin</B> is positive. <B>FrontClippingDistanceFromGlobalOrigin</B> specifies the distance
    along the <B>View</B>'s Z-axis from Global Origin to the front clipping plane, i.e., the plane that crosses through at <B>Extents.Z</B> distance from
    the <B>Origin</B>. Since <B>Extents.Z</B> is the distance from the back clipping plane to the front
    clipping plane, <B>Extents.Z</B> is always equal to <B>(vw.FrontClippingDistanceFromGlobalOrigin -
    vw.BackClippingDistanceFromGlobalOrigin)</B>.</li>
    </ul>
    <P><B>View</B> also provides these methods to get an alternate representation of the clipping plane.  These return a point at the
    bottom left corner of the front (back) face of the view area and a normal pointing out of (into) the view area giving the orientation of
    the plane.
    </P>
    <ul>
    <li><A href="usmthExtractFrontClippingPlane.htm">ExtractFrontClippingPlane</A></li>
    <li><A href="usmthExtractBackClippingPlane.htm">ExtractBackClippingPlane</A></li>
    </ul>
    <P><B>View</B> provides these methods to assist in setting up a <B>View</B>'s display area, orientation, and
    active depth.
    <ul>
    <li><A href="usmthSetActiveDepthByPoint.htm">SetActiveDepthByPoint</A> forces the active depth to a plane that contains the point and is parallel
    to the view.
    <li><A href="usmthSetClippingDistanceByPoints.htm">SetClippingDistanceByPoints</A> computes the plane for each point and sets <B>Origin</B> and <B>Extents.Z</B> so that
    one of the points is on the front clipping plane and the other is on the back clipping plane.</li>
    <li><A href="usmthSetClippingDistanceFromGlobalOrigin.htm">SetClippingDistanceFromGlobalOrigin</A> sets the clipping planes relative to the specified distances from the global
    origin.</li>
    <li><A href="usmthSetArea.htm">SetArea</A> sets the <B>View</B>'s display area based on arguments specifying origin, extents, rotation, and
    active depth.</li>
    <li><A href="usmthSetArea1.htm">SetArea1</A> is similar to <B>SetArea</B>, except instead of specifying the origin and extents the caller
    specifies a point that is on the back clipping plane, and 2 points that determine the X and Y boundaries.
    Using this information, <B>SetArea1</B> computes the origin and extents. </li>
    </ul>
    <P>A program can control a <B>View</B>'s camera settings using any the camera properties or by setting all of the camera
    properties at once use <A href="usmthSetCameraProperties.htm">SetCameraProperties</A>.  MicroStation sometimes automatically adjusts some camera properties when
    one is set so it is normally best to set all of the properties at once by calling <B>SetCameraProperties</B>.
</P>
<P class=RL><B>Version</B></P>
<P>
08.00.00
</P>
</BODY>
</HTML>

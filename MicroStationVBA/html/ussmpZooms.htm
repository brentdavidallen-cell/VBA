<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Zooming a View Example</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Zooming a View Example</H1>

<P class=T>
This example shows a few ways of controlling the range of what a view displays.
</P>
<P class=T>
ZoomAboutElement computes a point that is the middle of the range of an element.  It zooms
            about that point.
</P>
<P class=T>
ZoomWithSameOrigin zooms, but it keeps the origin the same letting the center change instead.
</P>
<P class=T>
ZoomAboutCenter shows two different ways of zooming about the center of the view.
</P>
<PRE class=CT><CODE>
Sub ZoomAboutElement(ele As <A href="usobjElement.htm">Element</A>, dblFactor As Double, intView As Integer)
    Dim rng As <A href="usudtRange3d.htm">Range3d</A>
    Dim pntZoom As <A href="usudtPoint3d.htm">Point3d</A>
    Dim oView As <A href="usobjView.htm">View</A>

    Set oView = <A href="usproActiveDesignFile.htm">ActiveDesignFile</A>.<A href="usproViews.htm">Views</A>(intView)

    '  Determine the middle of the range of the element
    rng = ele.<A href="usmthRange.htm">Range</A>
    With rng
        pntZoom.X = .High.X - .Low.X
        pntZoom.Y = .High.Y - .Low.Y
        pntZoom.Z = .High.Z - .Low.Z
        pntZoom = <A href="usmthPoint3dAddScaled.htm">Point3dAddScaled</A>(rng.Low, pntZoom, 0.5)
    End With

    '  Zoom about the center of he range. Zooming does not
    '  update the view, so it is necessary to call oView.Redraw
    oView.<A href="usmthZoomAboutPoint.htm">ZoomAboutPoint</A> pntZoom, dblFactor
    oView.<A href="usmthRedraw.htm">Redraw</A>
End Sub

'  Zooming normally scales the x and y and adjusts the origin to
'  keep the center point the same.  It is possible to zoom and
'  keep the origin the same just by changing Extents.
Sub ZoomWithSameOrigin(dblFactor As Double, intView As Integer)
    Dim oView As View
    Dim pnt As Point3d

    Set oView = ActiveDesignFile.Views(intView)
    pnt = oView.<A href="usproExtents.htm">Extents</A>
    pnt.X = dblFactor * pnt.X
    pnt.Y = dblFactor * pnt.Y
    oView.Extents = pnt
    oView.Redraw
End Sub

Sub ZoomAboutCenter()
    Dim oView1 As View, oView2 As View
    Dim pnt As Point3d
    Dim pntCenter As Point3d

    Set oView1 = ActiveDesignFile.Views(1)
    Set oView2 = ActiveDesignFile.Views(2)

    '  This is the trivial way to zoom about the center
    oView1.<A href="usmthZoom.htm">Zoom</A> 2
    oView1.Redraw

    '  This is a more complicated way
    pntCenter = oView2.<A href="usproCenter.htm">Center</A>

    '  Zoom by scaling Extents.  Changing Extents does not
    '  changes Center.  It does not change Origin
    pnt = oView2.Extents
    pnt.X = 2 * pnt.X
    pnt.Y = 2 * pnt.Y
    oView2.Extents = pnt
    oView2.Redraw

    '  Now restore the center.  This completes the more
    '  complicated way of zooming about the center
    oView2.Center = pntCenter
    oView2.Redraw
End Sub

</CODE></PRE>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>FromWeightedPointsAndBoundaries Method</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<H1 class=RH1><A NAME="usmthfromweightedpointsandboundaries"></A>FromWeightedPointsAndBoundaries Method</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_2695" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthFromWeightedPointsAndBoundariesC">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2696" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthFromWeightedPointsAndBoundariesX">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2697" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthFromWeightedPointsAndBoundariesA">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2698" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthFromWeightedPointsAndBoundariesS">
</OBJECT>
</P>

<P class=T>
Initializes this object with a least-squares surface that approximates the given ungridded, optionally weighted data
                 and interpolates the four nonrational boundary curves (in the manner of <A href="usmthFromFourBoundaryCurves.htm">FromFourBoundaryCurves</A>).
</P>
<P class=RL><B>Syntax</B></P>
<P class=SYN><I>object</I>.<B>FromWeightedPointsAndBoundaries</B> <I>Points</I>, <I>Weights</I>, <I>UCurve0</I>, <I>UCurve1</I>, <I>VCurve0</I>, <I>VCurve1</I> [, <I>UPolesCount</I> [, <I>VPolesCount</I> [, <I>UOrder</I> [, <I>VOrder</I> [, <I>MaximizeAccuracy</I> [, <I>MinimizeMemory</I>]]]]]]
<P class=T>The <B>FromWeightedPointsAndBoundaries</B> method syntax has these parts:</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Part</TH>
<TH width=79%>Description</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>object</I></TD>
<TD class=TT width=79%%>A valid object.</TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Points</I></TD>
<TD class=TT width=79%>
A <B><A href="usudtPoint3d.htm">Point3d</A> ()</B> expression. The array of points to be approximated.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Weights</I></TD>
<TD class=TT width=79%>
A <B>Double ()</B> expression. The optional array of nonnegative weights associated with the Points array.  If a given weight is zero, then its
                            corresponding point is ignored; if less than one, the corresponding point's influence is relaxed.  If the
                            Weights array is empty, then the points are unweighted; otherwise, the Weights array must have at least as many
                            entries as the Points array.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>UCurve0</I></TD>
<TD class=TT width=79%>
A <A href="usobjBsplineCurve.htm">BsplineCurve</A> expression. The nonrational boundary curve in the u-parameter direction at constant v = 0.  This curve has the same
                            orientation as UCurve1, starts at the same point at which VCurve0 starts, and ends at the same point at which
                            VCurve1 starts.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>UCurve1</I></TD>
<TD class=TT width=79%>
A <B>BsplineCurve</B> expression. The nonrational boundary curve in the u-parameter direction at constant v = 1.  This curve has the same
                            orientation as UCurve0, starts at the same point at which VCurve0 ends, and ends at the same point at which
                            VCurve1 ends.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>VCurve0</I></TD>
<TD class=TT width=79%>
A <B>BsplineCurve</B> expression. The nonrational boundary curve in the v-parameter direction at constant u = 0.  This curve has the same
                            orientation as VCurve1, starts at the same point at which UCurve0 starts, and ends at the same point at which
                            UCurve1 starts.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>VCurve1</I></TD>
<TD class=TT width=79%>
A <B>BsplineCurve</B> expression. The nonrational boundary curve in the v-parameter direction at constant u = 1.  This curve has the same
                            orientation as VCurve0, starts at the same point at which UCurve0 ends, and ends at the same point at which
                            UCurve1 ends.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>UPolesCount</I></TD>
<TD class=TT width=79%>
Optional. A <B>Long</B> expression. The <A href="usproUPolesCount.htm">UPolesCount</A> of the resulting object.  The maximum value of the product UPolesCount * VPolesCount is
                            limited to the number of entries in the Points array.  The minimum value of UPolesCount is nominally limited to
                            the sum of UCurve0.<A href="usproPolesCount.htm">PolesCount</A> and UCurve1.<B>PolesCount</B> (this limit may be higher if UOrder > UCurve0.<A href="usproOrder.htm">Order</A>
                            or UOrder > UCurve1.<B>Order</B>).  If omitted, a default count of 10 is used.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>VPolesCount</I></TD>
<TD class=TT width=79%>
Optional. A <B>Long</B> expression. The <A href="usproVPolesCount.htm">VPolesCount</A> of the resulting object.  The maximum value of the product UPolesCount * VPolesCount is
                            limited to the number of entries in the Points array.  The minimum value of VPolesCount is nominally limited to
                            the sum of VCurve0.<B>PolesCount</B> and VCurve1.<B>PolesCount</B> (this limit may be higher if VOrder > VCurve0.<B>Order</B>
                            or VOrder > VCurve1.<B>Order</B>).  If omitted, a default count of 10 is used.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>UOrder</I></TD>
<TD class=TT width=79%>
Optional. A <B>Long</B> expression. The <A href="usproUOrder.htm">UOrder</A> of the resulting object.  The minimum value of UOrder is limited to the larger of UCurve0.<B>Order</B>
                            and UCurve1.<B>Order</B>.  If omitted, a default order of 4 (cubic) is used.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>VOrder</I></TD>
<TD class=TT width=79%>
Optional. A <B>Long</B> expression. The <A href="usproVOrder.htm">VOrder</A> of the resulting object.  The minimum value of VOrder is limited to the larger of VCurve0.<B>Order</B>
                            and VCurve1.<B>Order</B>.  If omitted, a default order of 4 (cubic) is used.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>MaximizeAccuracy</I></TD>
<TD class=TT width=79%>
Optional. A <B>Boolean</B> expression. Indicates whether the Single Value Decomposition (SVD) is used to solve the over-determined system of equations.
                            If omitted or <B>False</B>, the LU decomposition with partial pivoting is used to solve the normal equations;
                            this method is faster but generally less accurate than the SVD, and on rare occasions, may cause this method to
                            fail.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>MinimizeMemory</I></TD>
<TD class=TT width=79%>
Optional. A <B>Boolean</B> expression. Indicates whether a sparse scheme is used to store the system coefficient matrix with only PointsCount * (UOrder
                            + VOrder) double values, where PointsCount is the number of entries in the Points array.  If <B>False</B>, the
                            system coefficient matrix has PointsCount * UPolesCount * VPolesCount double values, but the computation is
                            faster.  If omitted, a default value of <B>True</B> is used.  MinimizeMemory is restricted to <B>False</B> when
                            MaximizeAccuracy is <B>True</B>.
</TR>
</TABLE><BR>
<P class=RL><B>Remarks</B></P>

<P>
For <A href="usobjBsplineSurface.htm">BsplineSurface</A> objects, if Points <EM>is</EM> a rectangular gridded array, the values of UPolesCount and VPolesCount
             generally should not exceed the smaller array dimension.
</P>
<P>
For <B>BsplineSurface</B> objects, the input <B>BsplineCurve</B> objects must be nonrational; see <B>BsplineCurve</B>.<A href="usmthRebuild.htm">Rebuild</A> to approximate
             a <A href="usproRational.htm">Rational</A> B-spline curve with a nonrational one.
</P>
<P>
For <B>BsplineSurface</B> objects, the resulting surface may oscillate wildly over regions where there are no data; to remedy this,
             append to the Points array some reasonable data in the empty region, and recompute.
</P>
<P>
For <B>BsplineSurface</B> objects, better results are generally achieved when surface and boundary curve orders are equal (in each
             respective parametric direction) and as low as possible (e.g., order 3 or 4), when the surface pole counts in each
             parametric direction are significantly greater than the sum of the respective boundary curve pole counts, and when the product
             of the surface pole counts is significantly less than the number of points to be approximated.
</P>
<P class=RL><B>Version</B></P>
<P>
08.05.01
</P>
</BODY>
</HTML>

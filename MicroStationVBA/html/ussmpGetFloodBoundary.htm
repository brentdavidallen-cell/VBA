<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Get Boundary of Flood Region</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Get Boundary of Flood Region</H1>

<P class=T>
Demonstrates how to compute the boundary of a flood region.
</P>
<P class=T>
In this example, we compute the boundary of a flood region from a seed
                  point both using given (planar) candidate geometry, and using geometry
                  found in a <A href="usobjView.htm">View</A> and projected into the view plane.
</P>
<PRE class=CT><CODE>
Sub TestGetFloodBoundary()
    Dim oElement As <A href="usobjElement.htm">Element</A>, aCandidates() As Element, aNullCandidates() As Element
    Dim oLine As <A href="usobjLineElement.htm">LineElement</A>
    Dim ellipse As <A href="usudtEllipse3d.htm">Ellipse3d</A>
    Dim rotation As <A href="usudtMatrix3d.htm">Matrix3d</A>, saveRotation As Matrix3d
    Dim seed As <A href="usudtPoint3d.htm">Point3d</A>
    Dim i As Long

    ' Create some geometry in the xy-plane
    ReDim aCandidates(0 To 2)

    ' Circle #0
    ellipse.center = <A href="usmthPoint3dFromXY.htm">Point3dFromXY</A>(-0.5, 0)
    ellipse.<A href="usevtStart.htm">Start</A> = 0
    ellipse.Sweep = 2 * <A href="usmthPi.htm">Pi</A>
    ellipse.Vector0 = Point3dFromXY(1, 0)
    ellipse.Vector90 = Point3dFromXY(0, 1)
    Set aCandidates(0) = <A href="usmthCreateEllipticalElement1.htm">CreateEllipticalElement1</A>(Nothing, ellipse)

    ' Circle #1
    ellipse.center = Point3dFromXY(0.5, 0.1)
    Set aCandidates(1) = CreateEllipticalElement1(Nothing, ellipse)

    ' Circle #2 (hole)
    ellipse.center = Point3dFromXY(0, Sqr(3) / 4)
    ellipse.Vector0 = Point3dFromXY(Sqr(3) / 8, 0)
    ellipse.Vector90 = Point3dFromXY(0, Sqr(3) / 8)
    Set aCandidates(2) = CreateEllipticalElement1(Nothing, ellipse)

    ' Visualize the geometry
    For i = LBound(aCandidates) To UBound(aCandidates)
        <A href="usproActiveModelReference.htm">ActiveModelReference</A>.<A href="usmthAddElement.htm">AddElement</A> aCandidates(i)
        aCandidates(i).<A href="usmthRedraw.htm">Redraw</A>
    Next

    ' Set and visualize flood seed point
    seed = <A href="usmthPoint3dFromXYZ.htm">Point3dFromXYZ</A>(0, 0, 1)
    Set oLine = <A href="usmthCreateLineElement2.htm">CreateLineElement2</A>(aCandidates(0), seed, seed)
    oLine.color = oLine.color + 1
    oLine.<A href="usproLineWeight.htm">LineWeight</A> = 5
    ActiveModelReference.AddElement oLine
    oLine.Redraw

    ' Construct/visualize boundary of the flood region.  The seed point is first projected into
    ' the plane of the geometry.  If the geometry were nonplanar, then we'd hit a runtime error.
    ' Note that we check the return to see if a flood region was found.
    Set oElement = <A href="usmthGetFloodBoundary.htm">GetFloodBoundary</A>(aCandidates, Nothing, seed, , , , msdFillModeFilled)
    If Not oElement Is Nothing Then
        oElement.color = oLine.color
        ActiveModelReference.AddElement oElement
        oElement.Redraw
    End If

    ' Now we will demonstrate constructing the boundary of the flood region from geometry found
    ' in the view and flattened to the view plane containing the seed.

    ' Rotate first View
    rotation.RowX = Point3dFromXYZ(0.986197929054601, 0.165570663852075, 0)
    rotation.RowY = Point3dFromXYZ(-5.90548398303512E-02, 0.351751689498426, 0.934228705846494)
    rotation.RowZ = Point3dFromXYZ(0.154680867016669, -0.921334414969172, 0.356674536759194)
    saveRotation = <A href="usproActiveDesignFile.htm">ActiveDesignFile</A>.<A href="usproViews.htm">Views</A>(1).rotation
    ActiveDesignFile.Views(1).rotation = rotation
    ActiveDesignFile.Views(1).Redraw

    ' Visualize new seed point
    seed = Point3dFromXYZ(0#, -0.25, 0.25)
    Set oLine = CreateLineElement2(oElement, seed, seed)
    oLine.color = oLine.color + 1
    oLine.LineWeight = 5
    ActiveModelReference.AddElement oLine
    oLine.Redraw

    ' Construct/visualize boundary of flood region.  Geometry in the view is projected to the
    ' view plane containing the seed point, and the boundary is returned in this plane.
    ' Note that we pass in an empty element array to use the view scanner.
    ' After this subroutine completes, use View Previous to examine the flood boundary in the
    ' rotated first View.
    Set oElement = GetFloodBoundary(aNullCandidates, Nothing, seed, 1, , , msdFillModeFilled)
    If Not oElement Is Nothing Then
        oElement.color = oLine.color
        ActiveModelReference.AddElement oElement
        oElement.Redraw
    End If

    ' Restore first View rotation
    ActiveDesignFile.Views(1).rotation = saveRotation
    ActiveDesignFile.Views(1).Redraw

End Sub

</CODE></PRE>

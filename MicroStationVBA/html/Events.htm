<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Overview of MicroStation Events</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY>



<H1><A NAME="eventsoverview"></A>Overview of MicroStation Events</H1>

<P>A program can implement event handlers that MicroStation calls to notify the application of some significant action such
as opening or closing a design file, or attaching a reference file.  This section provides an overview of the events
that are available.</P>
<P>For most event handlers, the program must register in some way to let MicroStation know that it wants to be notified
of some type of event.  The exceptions to this are the <B>OnProjectLoad</B> and <B>OnProjectUnload</B> event handlers.
MicroStation calls a project's <B>OnProjectLoad</B> event handler as soon as the project is loaded.  It calls a project's
<B>OnProjectUnload</B> event handler just before unloading the project. A project indicates that it has
an <B>OnProjectLoad</B> event handler or <B>OnProjectUnload</B> event handler just by using one of the special names.
When MicroStation loads a project, it checks to
see if the project has a method that is named <B>OnProjectLoad</B> and does not take any arguments. If so, MicroStation
calls that method immediately.  Programs often use the <B>OnProjectLoad</B> event handler to register other event handlers.
When MicroStation unloads a project, it checks to see if the project has a method that is named <B>OnProjectUnload</B> and
does not take any arguments. If so, MicroStation calls that method as the final step before unloading the project.</P>
<P>Some events are associated with a specific object.  To register one of these event handlers, a program declares a variable in a class.  The
variable's type must be the same as the object that exposes the events.  The declare statement must include the <B>WithEvents</B>.
See <A href="ussmpeventopen.htm">Design File Open and Close Events Example</A> for an example of this.</P>
<P>If an event handler is not associated with a specific object, then a program must explicitly register the event handler.
Event handlers of this type are grouped into interfaces.  The program must implement a class that implements the interface,
and must register an instance of the class to make the event handler active. <A href="usmthStartPrimitive.htm">StartPrimitive</A>
and <A href="usmthStartLocate.htm">StartLocate</A> are used to register event handlers that remain active for the duration of a command.
There are also methods for registering event handlers that remain active until the event handler is unregistered, or the project implementing
the event handler is either unloaded or reset.  For example, the methods <A href="usmthAddAttachmentEventsHandler.htm">AddAttachmentEventsHandler</A>
and <A href="usmthRemoveAttachmentEventsHandler.htm">RemoveAttachmentEventsHandler</A> register and unregister an event handler that
handles attachment (i.e., reference file) events.</P>
</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Type of Event</TH>
<TH width=79%>Event Handlers</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>Design File Opened or Closed</B></TD>
<TD class=TT width=79%%><A href="usevtOnDesignFileOpened.htm">OnDesignFileOpened</A>, <A href="usevtOnDesignFileClosed.htm">OnDesignFileClosed</A></TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>Tracking Element Changes</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjichangetrackevents.htm">IChangeTrackEvents</A></TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>Model Activation</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjimodelactivateevents.htm">IModelActivateEvents</A></TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>View Update</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjiviewupdateevents.htm">IViewUpdateEvents</A></TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>Level Change</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjilevelchangeevents.htm">ILevelChangeEvents</A></TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>Reference File Attachments</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjiattachmentevents.htm">IAttachmentEvents</A></TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>Raster File Attachments</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjirasterevents.htm">IRasterEvents</A></TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>Keyin, Datapoint, Reset</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjiprimitivecommandevents.htm">IPrimitiveCommandEvents</A> and <A href="usobjilocatecommandevents.htm">ILocateCommandEvents</A></TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><B>Modal Dialog Opened or Closed</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjimodaldialogevents.htm">IModalDialogEvents</A></TD>
</TD>
<TR VALIGN="top">
<TD class=TT width=17%><B>SaveAs Command</B></TD>
<TD class=TT width=79%%>The methods of <A href="usobjisaveasevents.htm">ISaveAsEvents</A></TD>
</TD>
</TR>
</TABLE><BR>

</BODY>
</HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Value Property</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<H1 class=RH1><A NAME="usprovalue"></A>Value Property</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_9315" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usproValueC">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_9316" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usproValueX">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_9317" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usproValueA">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_9318" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usproValueS">
</OBJECT>
</P>

<P class=T> Read/Write <B>VARIANT</B>.
<P class=T>
Gets or sets the object's value.
</P>
<P class=RL><B>Syntax</B></P>
<P><I>object</I>.<B>Value</B> [= <I>Variant</I>]
<P class=T>The <B>Value</B> property syntax has these parts:</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Part</TH>
<TH width=79%>Description</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>object</I></TD>
<TD class=TT width=79%%>A valid object.</TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Variant</I></TD>
<TD class=TT width=79%>
A <B>VARIANT</B> expression. 
</TR>
</TABLE><BR>
<P class=RL><B>Remarks</B></P>

<P>
When used to set the value of a <A href="usobjTagElement.htm">TagElement</A>, <B>Value</B> does whatever type conversion is necessary to make the
    value you supply match the type that the <B>TagElement</B> expects.
    If  an integer is expected, then  setting <B>Value</B> to "Tag Number=" + Cstr(I) raises an error.  If a string is expected, then
    setting it to "Tag Number=" + Cstr(I) works as expected.  Setting it to a numeric value causes an automatic
    conversion to a string. When used to get the value of a <B>TagElement</B>, <B>Value</B> does not convert the data.  It returns
    the data as a <B>Variant</B>.  Visual Basic then converts the data as appropriate depending on how the macro uses it.
</P>
<P class=RL><B>Version</B></P>
<P>
08.00.00
</P>
</BODY>
</HTML>

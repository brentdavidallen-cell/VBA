<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Displaying Recently Modified Elements</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Displaying Recently Modified Elements</H1>

<P class=T>
ShowDays shows how use to Display Set so that only recently modified
            elements are displayed.
</P>
<P class=T>
AddToDisplaySet interprets the rest of the key-in line as a list of element ID's. For each ID, it
	    gets the element and adds it to the display set.
</P>
<PRE class=CT><CODE>
Private Sub ShowRecent(ByVal nDays As Integer)
    Dim ee As <A href="usobjElementEnumerator.htm">ElementEnumerator</A>
    Dim startDate As Date
    Dim vw As <A href="usobjView.htm">View</A>

    Set vw = <A href="usproActiveDesignFile.htm">ActiveDesignFile</A>.<A href="usproViews.htm">Views</A>(1)
    vw.<A href="usproUsesDisplaySet.htm">UsesDisplaySet</A> = True
    <A href="usmthResetDisplaySet.htm">ResetDisplaySet</A> False
    vw.<A href="usmthRedraw.htm">Redraw</A>

    startDate = Date - nDays + 1

    Set ee = <A href="usproActiveModelReference.htm">ActiveModelReference</A>.<A href="usproGraphicalElementCache.htm">GraphicalElementCache</A>.<A href="usmthScan.htm">Scan</A>
    Do While ee.<A href="usmthMoveNext.htm">MoveNext</A>
        Dim dateEle As Date

        If startDate &lt;= ee.<A href="usproCurrent.htm">Current</A>.<A href="usproDateLastModified.htm">DateLastModified</A> Then
            ee.Current.<A href="usproInDisplaySet.htm">InDisplaySet</A> = True
        End If
    Loop

    vw.Redraw
End Sub

Sub ShowDays()
    Dim nDays As Integer
    nDays = 1

    If Len(<A href="usproKeyinArguments.htm">KeyinArguments</A>) &gt; 0 Then
        nDays = Val(KeyinArguments)
    End If

    ShowRecent nDays
End Sub
'
'   Gets a list of element ID's from the key-in and
'   adds each element to the display set
'
'   Invoke this with a key-in like:
'         vba run AddToDisplaySet 139 211 409
'
Sub AddToDisplaySet()
    Dim arArgs() As String
    Dim sArg
    Dim eleID As <A href="usudtDLong.htm">DLong</A>
    Dim ele As <A href="usobjElement.htm">Element</A>

    If Len(KeyinArguments) &gt; 0 Then
        arArgs = Split(KeyinArguments)
        For Each sArg In arArgs
            eleID = <A href="usmthDLongFromString.htm">DLongFromString</A>(sArg)
            Set ele = ActiveModelReference.<A href="usmthGetElementByID.htm">GetElementByID</A>(eleID)
            ele.InDisplaySet = True
        Next
    End If
End Sub


</CODE></PRE>

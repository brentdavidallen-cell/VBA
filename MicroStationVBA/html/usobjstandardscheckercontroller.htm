<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>StandardsCheckerController Object</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1><A NAME="usobjstandardscheckercontroller"></A>StandardsCheckerController Object</H1>

<P>
<P class=ALNSR>
<OBJECT ID="hhobj_995" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjStandardsCheckerControllerC">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_996" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjStandardsCheckerControllerX">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_997" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Properties">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjStandardsCheckerControllerP">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_998" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Methods">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjStandardsCheckerControllerM">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_999" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Events">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjStandardsCheckerControllerE">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1000" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjStandardsCheckerControllerS">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1001" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Interfaces">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjStandardsCheckerControllerI">
</OBJECT>
</P>

<P class=T>
The <B>StandardsCheckerController</B> provides a framework for hooking VBA programs into MicroStation's Standards Checker
    framework.
</P>
<P class=RL><B>Remarks</B></P>
<P>
The examples directory has 3 example standards checkers. SCSimpleRefCheck is a simple standards checker that
    detects missing attachments.  SCCompleteRefCheck is a more complete version of SCSimpleRefCheck. SCByLevel is a much
    more complicated example that uses all of the capabilities of the <B>StandardsCheckerController</B> and related classes.
</P>
<P>
To hook into the standards checker framework, a program implements a class that implements the <A href="usobjIStandardsChecker.htm">IStandardsChecker</A>
    interface. The program must register an instance of the class by calling <A href="usmthAddStandardsChecker.htm">AddStandardsChecker</A>.
</P>
<P>
When the user launches the Standards Checker, it looks for all of the applications that have registered
    with <B>AddStandardsChecker</B>.  For each one, it creates a line in the <B>Checks</B> portion of the Standards Checker form.
    The order in the list is controlled by the Priority argument to <B>AddStandardsChecker</B>. The order is not terribly
    important, but using an order does make it possible for the Standards Checker to display the checks in the same
    order each time.
</P>
<P>
While creating the checks section, the <B>StandardsCheckerController</B> asks each checker to provide a <A href="usproDialogString.htm">DialogString</A> and
    an <A href="usproIdentityString.htm">IdentityString</A>,  It also asks the checker if it has user-edittable settings and if it has found its settings. If
    the checker has user-edittable settings then it should return <B>True</B> for <A href="usproHasSettings.htm">HasSettings</A>.  That causes the
    <B>StandardsCheckerController</B> to add a <B>Settings</B> button to the checker's line in the Standards Checker form.
    If the checker has all of the settings necessary to run then it should return <B>True</B> for <A href="usproFoundSettings.htm">FoundSettings</A>.
    If the checker returns <B>False</B> for <B>FoundSettings</B>, then the <B>StandardsCheckerController</B> dims the checker's
    line in the checks section.  The user is not able to access the checker.
</P>
<P>
The <B>StandardsCheckerController</B> operates in 2 modes: a settings configuration mode and a checking mode.
</P>
<P>
In the settings configuration mode, the user can create and delete groups of settings and edit the application
    specific settings. When the user creates a new settings name, the <B>StandardsCheckerController</B> calls the
    <A href="usmthCreateSettings.htm">CreateSettings</A> method of each active checker. When the user deletes a settings name, the <B>StandardsCheckerController</B>
    calls the <A href="usmthDeleteSettings.htm">DeleteSettings</A> method of each active checker. If the user presses the <B>Settings</B> button on
    the checker's line in the checks section of the form, then the <B>StandardsCheckerController</B> calls the checker's
    <A href="usmthEditSettings.htm">EditSettings</A> method. Any of these methods can use <B>StandardsCheckerController</B>.<A href="usproSettingsName.htm">SettingsName</A> to get the name of the
    current settings.
</P>
<P>
In the checking mode, the user can run the checkers by pressing the <B>Check</B> button.
    In this mode, the user can also view the standards checker's settings by clicking one of the <B>Settings</B> buttons.
</P>
<P>
When the user presses the <B>Settings</B> button in the checking mode, the <B>StandardsCheckerController</B> calls the
    checkers <B>EditSettings</B> method with <I>IsReadOnly</I> set to <B>True</B>.  The checker should display the settings
    but should not let the user change them.
</P>
<P>
When the user presses the <B>Check</B> button, the <B>StandardsCheckerController</B> first
    calls the <A href="usmthAddedCheckerToStandardsCheckerApps.htm">AddedCheckerToStandardsCheckerApps</A> of each checker telling the checker that the <B>StandardsCheckerController</B>
    has added the checker to the section of the report that describes the checkers and the standards they enforce.
    The standards checker can add more detailed information.  Next the <B>StandardsCheckerController</B> calls the <A href="usmthRunCheck.htm">RunCheck</A> method of each of
    the reports. If the user has not selected the <B>Report File</B> option, the <B>StandardsCheckerController</B> skips the
    step of adding the checkers to the report.
</P>
<P>
The <B>RunCheck</B> method performs the actual check of the standards. It uses <A href="usmthShowCheckerError.htm">ShowCheckerError</A> and
    <A href="usmthShowCheckerErrorWithFixOptions.htm">ShowCheckerErrorWithFixOptions</A> to interact with the user via the <B>StandardsCheckerController</B>'s standard form
    for reporting errors.  A checker's <B>RunCheck</B> method should use <B>StandardsCheckerController</B>.<A href="usproReport.htm">Report</A> to access a
    <A href="usobjStandardsCheckerReport.htm">StandardsCheckerReport</A> object that it can use to log problems in the standards checker report. The <B>RunCheck</B> method should
    also use the <A href="usproTotalProblems.htm">TotalProblems</A>, <A href="usproFixedProblems.htm">FixedProblems</A>, and <A href="usproIgnoredProblems.htm">IgnoredProblems</A> properties to increment the counts displayed in
    the form that the <B>StandardsCheckerController</B> displays once all of the checks have completed.
</P>
<P>
The <B>RunCheck</B> method has an options argument that the <B>StandardsCheckerController</B> creates by <B>Or</B>'ing together flags
    from <B>MsdStandardsCheckerCheckOptions</B>.  This specifies various options the user has when running the standards
    checker.  Often an implementer of a checker can ignore these options.  The <B>StandardsCheckerController</B> compensates for the
    differences.
</P>
<P>
If <B>msdStandardsCheckerCheckOptionGenerateReport</B> is not set, the <B>StandardsCheckerController</B> does not call the
    checker's <B>AddedCheckerToStandardsCheckerApps</B> method.  Also the methods of <B>StandardsCheckerReport</B> and <A href="usobjStandardsCheckerProblem.htm">StandardsCheckerProblem</A>
    do not do anything. They know that the user does not want a report so they just return.
</P>
<P>
If <B>msdStandardsCheckerCheckOptionInsertAppData</B> is not set, the <B>StandardsCheckerController</B> does not
    call the checker's <B>AddedCheckerToStandardsCheckerApps</B> method.
</P>
<P>
If <B>msdStandardsCheckerCheckOptionInteractive</B> is not set, then <B>ShowCheckerError</B> and <B>ShowCheckerErrorWithFixOptions</B>
    do not display the error. Instead, they just return immediately.  If <B>msdStandardsCheckerCheckOptionFixErrors</B> is
    defined, the program specifies msdStandardsCheckerReplaceOptionCanFix, and the program specifies
    <B>False</B> for Ignored then these methods return <B>msdStandardsCheckerReplaceChoiceFix</B>. Otherwise, these
    methods return <B>msdStandardsCheckerReplaceChoiceSkip</B> meaning <B>Skip</B> if the problem was not
    previously ignored or <B>Continue ignoring</B> if the problem was previously ignored.
</P>
<P>
If <B>msdStandardsCheckerCheckOptionFixErrors</B> is not set, then <B>ShowCheckerError</B> and
    <B>ShowCheckerErrorWithFixOptions</B> always disable the <B>Fix</B> button.
</P>
<P>
If <B>msdStandardsCheckerCheckOptionShowIgnoredErrors</B> is set and the <B>Ignored</B> argument is <B>True</B>
    is not set, then <B>ShowCheckerError</B> and <B>ShowCheckerErrorWithFixOptions</B> always return immediately returning
    <B>msdStandardsCheckerReplaceChoiceSkip</B> for continue ignoring.
</P>
<P>
A checker must increment the problem counts. It must increment <B>TotalProblems</B> for every problem. It must
    increment <B>FixedProblems</B> for every problem that it fixes. It must increment <B>IgnoredProblems</B> for every ignored problem.
    That includes every problem that was previously ignored and every problem that is marked as ignored in the current run.
</P>
<P class=RL><B>Version</B></P>
<P>
08.05.00
</P>
</BODY>
</HTML>

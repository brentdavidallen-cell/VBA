<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Listing All of the Named Groups</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Listing All of the Named Groups</H1>

<P class=T>
This example shows how to find all of a model's named groups.
</P>
<PRE class=CT><CODE>
Sub PrintGroupInformation()
    Dim ee As <A href="usobjElementEnumerator.htm">ElementEnumerator</A>
    Dim sc As New ElementScanCriteria
    Dim index As Long

    '  Scan the model's <A href="usproControlElementCache.htm">ControlElementCache</A> looking for all named groups
    sc.<A href="usmthExcludeAllTypes.htm">ExcludeAllTypes</A>
    sc.<A href="usmthIncludeType.htm">IncludeType</A> msdElementTypeNamedGroupHeader
    Set ee = <A href="usproActiveModelReference.htm">ActiveModelReference</A>.ControlElementCache.<A href="usmthScan.htm">Scan</A>(sc)

    Do While ee.<A href="usmthMoveNext.htm">MoveNext</A>
        '  Process the current named group
        Dim ng As <A href="usobjNamedGroupElement.htm">NamedGroupElement</A>
        Dim eeMembers As ElementEnumerator
        Dim aContainers() As NamedGroupElement

        Set ng = ee.<A href="usproCurrent.htm">Current</A>
        Debug.Print "Group " & ng.<A href="usproName.htm">Name</A> & " has " & ng.<A href="usproMembersCount.htm">MembersCount</A> & " members."

        '  Now find out what named groups contain the current named group.
        aContainers = ng.<A href="usmthGetContainingNamedGroups.htm">GetContainingNamedGroups</A>
        If UBound(aContainers) &gt;= 0 Then
            Debug.Print "It is contained in these groups:"
            For index = 0 To UBound(aContainers)
                Debug.Print "     " & aContainers(index).Name
            Next
       End If
    Loop
End Sub

</CODE></PRE>

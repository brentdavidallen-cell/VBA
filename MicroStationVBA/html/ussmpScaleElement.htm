<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Scaling an Element Example</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Scaling an Element Example</H1>

<P class=T>
This example illustrates a technique for scaling an element in MicroStation by generating and applying a
            Transform3d.
</P>
<P class=T>
This example uses <A href="usmthMatrix3dFromScale.htm">Matrix3dFromScale</A> to create a matrix for uniform scaling. Then it uses
            <A href="usmthTransform3dFromMatrix3dAndFixedPoint3d.htm">Transform3dFromMatrix3dAndFixedPoint3d</A> to create a transformation matrix that scales about a fixed point.
            Then it uses <A href="usmthTransform.htm">Transform</A> to apply the transform to the element.
</P>
<PRE class=CT><CODE>
Sub ScaleElement(ele As <A href="usobjElement.htm">Element</A>, dblScaleFactor As Double, pntFixed As <A href="usudtPoint3d.htm">Point3d</A>)
    Dim ScaleMatrix As <A href="usudtMatrix3d.htm">Matrix3d</A>
    Dim Eltrans As <A href="usudtTransform3d.htm">Transform3d</A>

    ' Create the matrix for scaling by the scale factor
    ScaleMatrix = Matrix3dFromScale(dblScaleFactor)

    '  Now use the scaling matrix to create a transform for scaling about the fixed point
    Eltrans = Transform3dFromMatrix3dAndFixedPoint3d(ScaleMatrix, pntFixed)

    '  Apply the transform to scale the element
    ele.Transform Eltrans
End Sub

Sub ScaleText()
    If Not <A href="usproActiveModelReference.htm">ActiveModelReference</A>.<A href="usproAnyElementsSelected.htm">AnyElementsSelected</A> Then
        <A href="usmthShowError.htm">ShowError</A> "The macro requires a selection set"
        Exit Sub
    End If

    ' transform selected elements
    Dim ee As <A href="usobjElementEnumerator.htm">ElementEnumerator</A>
    Set ee = ActiveModelReference.<A href="usmthGetSelectedElements.htm">GetSelectedElements</A>  ' get the selected elements

    While ee.<A href="usmthMoveNext.htm">MoveNext</A>
        'check to see if selected element is a Text element
        If ee.<A href="usproCurrent.htm">Current</A>.<A href="usproType.htm">Type</A> = msdElementTypeText Then
            With ee.Current.<A href="usproAsTextElement.htm">AsTextElement</A>
                '  Erase the element before scaling it
                .<A href="usmthRedraw.htm">Redraw</A> msdDrawingModeErase

                '  Scale the element about its origin
                ScaleElement ee.Current, 2, .<A href="usproOrigin.htm">Origin</A>

                '  Now save the scaled element and redraw it.
                .<A href="usmthRewrite.htm">Rewrite</A>
                .Redraw
            End With
        End If
    Wend

    <A href="usmthShowPrompt.htm">ShowPrompt</A> "Done"
End Sub

</CODE></PRE>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Reference File Attachment Events</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1>Reference File Attachment Events</H1>

<P class=T>
This example illustrates a technique for being notified when a reference file is attached or detached, or when the attachment changes.
</P>
<P class=T>
The following code is from a Class Module. In this example, the class is named clsAttachmentEventsHandler,
            but any name can be used. The class implements the events in the event interface <A href="usobjIAttachmentEvents.htm">IAttachmentEvents</A>.
</P>
<PRE class=CT><CODE>
Implements IAttachmentEvents

Private Sub IAttachmentEvents_<A href="usevtAfterAttach.htm">AfterAttach</A>(ByVal TheAttachment As <A href="usobjAttachment.htm">Attachment</A>)
    Debug.Print "Attached " & TheAttachment.<A href="usproLogicalName.htm">LogicalName</A>
End Sub

Private Sub IAttachmentEvents_<A href="usevtAfterDetach.htm">AfterDetach</A>(ByVal TheAttachment As Attachment)
    Debug.Print "Detached " & TheAttachment.LogicalName
End Sub

Private Sub IAttachmentEvents_<A href="usevtAttachmentModified.htm">AttachmentModified</A>(ByVal TheAttachment As Attachment)
    Debug.Print "Modified attachment " & TheAttachment.LogicalName
End Sub

Private Sub IAttachmentEvents_<A href="usevtBeforeAttach.htm">BeforeAttach</A>(FileName As String, AllowAttachment As Boolean)
    If InStr(FileName, "MasterCopy") Then
    'have code to check for valid working file out of scope of this example
        Replace FileName, "MasterCopy", "WorkingCopy"
    End If
    AllowAttachment = True
End Sub

Private Sub IAttachmentEvents_<A href="usevtBeforeDetach.htm">BeforeDetach</A>(ByVal TheAttachment As Attachment)
    Debug.Print "About to detach " & TheAttachment.LogicalName
End Sub

</CODE></PRE>
<P class=T>
The following code is from a Code Module.  It simply creates an instance of the class that
            implements the <B>IAttachmentEvents</B> interface and adds it to MicroStation's set of
            attachment events handlers.
</P>
<PRE class=CT><CODE>
Sub AddHandler()
    Dim eventHandler As New clsAttachmentEventsHandler

    <A href="usmthAddAttachmentEventsHandler.htm">AddAttachmentEventsHandler</A> eventHandler
End Sub

</CODE></PRE>

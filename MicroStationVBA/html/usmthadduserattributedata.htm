<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>AddUserAttributeData Method</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<H1 class=RH1><A NAME="usmthadduserattributedata"></A>AddUserAttributeData Method</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1507" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthAddUserAttributeDataC">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1508" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthAddUserAttributeDataX">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1509" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthAddUserAttributeDataA">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1510" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthAddUserAttributeDataS">
</OBJECT>
</P>

<P class=T>
Adds user data to this object.
    <P>For an element, calling <B>AddUserAttributeData</B> raises an error if the element is not graphical.
    If you're in doubt, firstly check the element's <A href="usproIsGraphical.htm">IsGraphical</A> property.</P>
</P>
<P class=RL><B>Syntax</B></P>
<P class=SYN><I>object</I>.<B>AddUserAttributeData</B> <I>AttributeID</I>, <I>AttributeData</I>
<P class=T>The <B>AddUserAttributeData</B> method syntax has these parts:</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Part</TH>
<TH width=79%>Description</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>object</I></TD>
<TD class=TT width=79%%>A valid object.</TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>AttributeID</I></TD>
<TD class=TT width=79%>
A <B>Long</B> expression. 
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>AttributeData</I></TD>
<TD class=TT width=79%>
A <A href="usobjDataBlock.htm">DataBlock</A> expression. 
</TR>
</TABLE><BR>
<P class=RL><B>Remarks</B></P>

<P>
It is sometimes useful to attach custom-formatted, non-graphical data to elements, models, and levels. MicroStation,
    itself, uses this technique to record such information as patterning, database linkages, and fills.
    <P>User attribute data provides a way for an application to attach its own custom data. The structure
    and meaning of the data is controlled entirely by the application, itself.</P>
    <P>An element, model, or level can contain any number of custom data structures, from any number of applications. Therefore,
    each application needs a way to distinguish "its own" custom data from those of other applications (including
    those of MicroStation, itself). That's the purpose of the AttributeID field. If you fail to use a
    unique AttributeId, then your application may erroneously access, delete, or overwrite MicroStation's
    data or some other application's data, or MicroStation or some other application may erroneously
    access, delete, or overwrite your data. </P>
    <P>To avoid potential conflicts worldwide, user attribute IDs are managed by Bentley Systems, Inc.
    Please contact developer support at Bentley Systems to reserve an ID that is unique to your organization.
    (There is no charge for this service, and no questions will be asked regarding the purpose or use of
    your custom data.)</P>
    <P>If your organization uses more than one kind of custom data, you can introduce a "subtype" field
    within your data structure, to distinguish the different types of custom data within your organization.</P>
    <P>A VBA macro can add user attribute data to an element by creating a <B>DataBlock</B> object, copying the data to
    the DataBlock object, calling <B>AddUserAttributeData</B> to transfer the data from the <B>DataBlock</B> to the
    <A href="usobjElement.htm">Element</A>, and then calling <A href="usmthRewrite.htm">Rewrite</A> to save the updated element to the design file.
    <B>AddUserAttributeData</B> copies the entire <B>DataBlock</B> to the <B>Element</B>. MicroStation does not
    interpret the contents of the <B>DataBlock</B>.  The process is similar for a <A href="usobjLevel.htm">Level</A>, except the program must call <A href="usobjLevels.htm">Levels</A>.<B>Rewrite</B>.
    The program does not need to call a <B>Rewrite</B> method after adding user attribute data to a model.</P>
</P>
<P class=RL><B>Version</B></P>
<P>
08.00.00
</P>
</BODY>
</HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>FromWeightedPointsAndPlane Method</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<H1 class=RH1><A NAME="usmthfromweightedpointsandplane"></A>FromWeightedPointsAndPlane Method</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_2699" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthFromWeightedPointsAndPlaneC">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2700" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthFromWeightedPointsAndPlaneX">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2701" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthFromWeightedPointsAndPlaneA">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2702" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthFromWeightedPointsAndPlaneS">
</OBJECT>
</P>

<P class=T>
Initializes this object with a least-squares surface that approximates the given ungridded, optionally weighted data
                 defined over an optional plane.
</P>
<P class=RL><B>Syntax</B></P>
<P class=SYN><I>object</I>.<B>FromWeightedPointsAndPlane</B> <I>Points</I>, <I>Weights</I>, <I>PlaneFrame</I> [, <I>UPolesCount</I> [, <I>VPolesCount</I> [, <I>UOrder</I> [, <I>VOrder</I> [, <I>MaximizeAccuracy</I> [, <I>MinimizeMemory</I>]]]]]]
<P class=T>The <B>FromWeightedPointsAndPlane</B> method syntax has these parts:</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Part</TH>
<TH width=79%>Description</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>object</I></TD>
<TD class=TT width=79%%>A valid object.</TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Points</I></TD>
<TD class=TT width=79%>
A <B><A href="usudtPoint3d.htm">Point3d</A> ()</B> expression. The array of points to be approximated.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Weights</I></TD>
<TD class=TT width=79%>
A <B>Double ()</B> expression. The optional array of nonnegative weights associated with the Points array.  If a given weight is zero, then its
                            corresponding point is ignored; if less than one, the corresponding point's influence is relaxed.  If the
                            Weights array is empty, then the points are unweighted; otherwise, the Weights array must have at least as many
                            entries as the Points array.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>PlaneFrame</I></TD>
<TD class=TT width=79%>
A <A href="usudtTransform3d.htm">Transform3d</A> expression. The optional plane-to-world transformation for computing the parameters associated with the Points array.  Plane
                            x-, y- and z-axes and plane origin should be given (in world coordinates) in the matrix columns and the
                            translation part of PlaneFrame, respectively.  If PlaneFrame is the zero transform (cf. <A href="usmthTransform3dZero.htm">Transform3dZero</A>), then
                            this method computes a plane from the Points array; otherwise, the x- and y-axes must not be parallel and must
                            be perpendicular to the z-axis (cf. <A href="usmthTransform3dFromPlane3dToWorld.htm">Transform3dFromPlane3dToWorld</A>).
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>UPolesCount</I></TD>
<TD class=TT width=79%>
Optional. A <B>Long</B> expression. The <A href="usproUPolesCount.htm">UPolesCount</A> of the resulting object.  The maximum value of the product UPolesCount * VPolesCount is
                            limited to the number of entries in the Points array.  If omitted, a default count of 10 is used.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>VPolesCount</I></TD>
<TD class=TT width=79%>
Optional. A <B>Long</B> expression. The <A href="usproVPolesCount.htm">VPolesCount</A> of the resulting object.  The maximum value of the product UPolesCount * VPolesCount is
                            limited to the number of entries in the Points array.  If omitted, a default count of 10 is used.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>UOrder</I></TD>
<TD class=TT width=79%>
Optional. A <B>Long</B> expression. The <A href="usproUOrder.htm">UOrder</A> of the resulting object.  If omitted, a default order of 4 (cubic) is used.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>VOrder</I></TD>
<TD class=TT width=79%>
Optional. A <B>Long</B> expression. The <A href="usproVOrder.htm">VOrder</A> of the resulting object.  If omitted, a default order of 4 (cubic) is used.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>MaximizeAccuracy</I></TD>
<TD class=TT width=79%>
Optional. A <B>Boolean</B> expression. Indicates whether the Single Value Decomposition (SVD) is used to solve the over-determined system of equations.
                            If omitted or <B>False</B>, the LU decomposition with partial pivoting is used to solve the normal equations;
                            LU decomposition is faster but generally less accurate than SVD, and on rare occasions, may cause this method to
                            fail.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>MinimizeMemory</I></TD>
<TD class=TT width=79%>
Optional. A <B>Boolean</B> expression. Indicates whether a sparse scheme is used to store the system coefficient matrix with only PointsCount * (UOrder
                            + VOrder) double values, where PointsCount is the number of entries in the Points array.  If <B>False</B>, the
                            system coefficient matrix has PointsCount * UPolesCount * VPolesCount double values, but the computation is
                            faster.  If omitted, a default value of <B>True</B> is used.  MinimizeMemory is restricted to <B>False</B> when
                            MaximizeAccuracy is <B>True</B>.
</TR>
</TABLE><BR>
<P class=RL><B>Remarks</B></P>

<P>
For <A href="usobjBsplineSurface.htm">BsplineSurface</A> objects, if Points <EM>is</EM> a rectangular gridded array, the values of UPolesCount and VPolesCount
             generally should not exceed the smaller array dimension.
</P>
<P>
For <B>BsplineSurface</B> objects, the resulting surface may oscillate wildly over regions where there are no data; to remedy this,
             append to the Points array some data at the desired height in the empty region, and recompute.
</P>
<P>
For <B>BsplineSurface</B> objects, better results are generally achieved with lower surface orders (UOrder, VOrder = 3 or 4) and
             when the product of the surface pole counts is significantly less than the number of points to be approximated.
</P>
<P class=RL><B>Version</B></P>
<P>
08.01.02
</P>
</BODY>
</HTML>

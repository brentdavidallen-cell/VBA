<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CreateCellElement1 Method</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<H1 class=RH1><A NAME="usmthcreatecellelement1"></A>CreateCellElement1 Method</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1915" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthCreateCellElement1C">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1916" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthCreateCellElement1X">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1917" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthCreateCellElement1A">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1918" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthCreateCellElement1S">
</OBJECT>
</P>

<P class=T>
Creates a <A href="usobjCellElement.htm">CellElement</A> of the specified name from the specified elements.
</P>
<P class=RL><B>Syntax</B></P>
<P class=SYN><B>Set</B> <I><B>CellElement</B></I> = <I>object</I>.<B>CreateCellElement1</B> (<I>Name</I>, <I>Elements</I>, <I>Origin</I> [, <I>IsPointCell</I>])
<P class=T>The <B>CreateCellElement1</B> method syntax has these parts:</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Part</TH>
<TH width=79%>Description</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>object</I></TD>
<TD class=TT width=79%%>A valid object.</TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Name</I></TD>
<TD class=TT width=79%>
A <B>String</B> expression. The name to give to the cell.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Elements</I></TD>
<TD class=TT width=79%>
A <B><A href="usobjElement.htm">Element</A> ()</B> expression. An array of <B>Element</B> objects. It is invalid to refer to these elements after creating the cell.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>Origin</I></TD>
<TD class=TT width=79%>
A <A href="usudtPoint3d.htm">Point3d</A> expression. Where to place the cell.
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>IsPointCell</I></TD>
<TD class=TT width=79%>
Optional. A <B>Boolean</B> expression. Indicates whether to create the cell as a point cell.
</TR>
</TABLE><BR>
<P class=RL><B>Remarks</B></P>

<P>
<B>Important:</B> The geometric arguments are given in the coordinate system of the <I>currently active</I> model.
    Therefore, before you call this method, you should ensure that the model to which you intend to add the element is the <I>active</I> model. (You can
    make a model active by calling the <A href="usmthActivate.htm">Activate</A> method of the appropriate <A href="usobjModelReference.htm">ModelReference</A> object.)
    <P>Use <A href="usmthCreateCellElement2.htm">CreateCellElement2</A> to create a cell from a cell definition that is contained in a cell library.</P>
    <P>When a MicroStation Place Cell command places a Graphic Cell, it uses the symbology (color, line style, and level) as defined in the cell library,
    makes the cell view-dependent, and leaves the components snappable. When a MicroStation Place Cell commands places a Point Cell, it assigns
    the active symbology  to the components, makes the cell view-independent, and makes the components non-snappable. A point cell created by a
    MicroStation Place Cell command has one snappable point - its origin - and is always placed on the Active Level, regardless of the level(s) on
    which its components were created.</P>
    <P><B>CreateCellElement1</B> only performs some of the tasks that Place Cell performs when creating a point cell.
    Passing <B>True</B> for <I>IsPointCell</I> causes <B>CreateCellElement1</B> to make the cell itself snappable and view-independent but,
    unlike MicroStation's Place Cell commands, it does not affect the individual components of the cell.  Unlike MicroStation's
    Place Cell commands. <B>CreateCellElement1</B> does not change the symbology or the snappable property of the components of a point cell.</P>
    <P>To mimic the behavior of MicroStation's Place Cell commands when placing a point cell, a program may want to change the symbology of
    the components and also make the elements non-snappable. Of course, if the program creates the components immediately before creating the
    cell then the components are created with current symbology. Then the program only needs to make the elements non-snappable.  Here is an example:</P>
    <pre><code>
Sub CreatePointCell()
    Dim eleCell As <B>CellElement</B>
    Dim index As Integer

    Dim arr(0 To 3) As <B>Element</B>

    Set arr(0) = <A href="usmthCreateLineElement2.htm">CreateLineElement2</A>(Nothing, <A href="usmthPoint3dFromXY.htm">Point3dFromXY</A>(0, 0), <B>Point3dFromXY</B>(1, 0))
    Set arr(1) = <B>CreateLineElement2</B>(Nothing, <B>Point3dFromXY</B>(1, 0), <B>Point3dFromXY</B>(1, 1))
    Set arr(2) = <B>CreateLineElement2</B>(Nothing, <B>Point3dFromXY</B>(1, 1), <B>Point3dFromXY</B>(0, 1))
    Set arr(3) = <B>CreateLineElement2</B>(Nothing, <B>Point3dFromXY</B>(0, 1), <B>Point3dFromXY</B>(0, 0))

    For index = LBound(arr) To UBound(arr)
        arr(index).<A href="usproIsSnappable.htm">IsSnappable</A> = False
    Next

    Set eleCell = <B>CreateCellElement1</B>("PointCellExample", arr, <B>Point3dFromXY</B>(0.5, 0.5), True)
    <A href="usproActiveModelReference.htm">ActiveModelReference</A>.<A href="usmthAddElement.htm">AddElement</A> eleCell
End Sub
    </code></pre>
</P>
<P class=RL><B>Version</B></P>
<P>
08.00.00
</P>
</BODY>
</HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetXData Method</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">


<H1 class=RH1><A NAME="usmthsetxdata"></A>SetXData Method</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_5035" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthSetXDataC">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_5036" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthSetXDataX">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_5037" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthSetXDataA">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_5038" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usmthSetXDataS">
</OBJECT>
</P>

<P class=T>
Assigns new XData for a given application name on this object. It replaces any existing XData for this application name on this object.
    The object may be any type of graphical element or a <A href="usobjModelReference.htm">ModelReference</A>.
</P>
<P class=RL><B>Syntax</B></P>
<P class=SYN><I>object</I>.<B>SetXData</B> <I>ApplicationName</I>, <I>NewXData</I>
<P class=T>The <B>SetXData</B> method syntax has these parts:</P>
<TABLE cellpadding=4 cellspacing=4 cols=3>
<TR VALIGN="top">
<TH width=17%>Part</TH>
<TH width=79%>Description</TH>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>object</I></TD>
<TD class=TT width=79%%>A valid object.</TD>
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>ApplicationName</I></TD>
<TD class=TT width=79%>
A <B>String</B> expression. 
</TR>
<TR VALIGN="top">
<TD class=TT width=17%><I>NewXData</I></TD>
<TD class=TT width=79%>
A <B><A href="usudtXDatum.htm">XDatum</A> ()</B> expression. 
</TR>
</TABLE><BR>
<P class=RL><B>Remarks</B></P>

<P>
See <A href="usobjXDataObject.htm">XDataObject</A> for a discussion of why the MicroStationDGN object model supports two techniques for accessing XData.
    This information is particularly important for .NET programs using .NET COM interop to access the MicroStationDGN object model.
</P>
<P>
XData is represented as an array of <B>XDatum</B> values.
    <P>If the <B>NewXData</B> argument is an empty array, calling this method has the same effect as calling <A href="usmthDeleteXData.htm">DeleteXData</A>.</P>
    <P>To change or extend an object's <I>existing</I> XData, use <A href="usmthGetXData.htm">GetXData</A> to get the XData, change it, then use <B>SetXData</B> to put the revised XData.</P>
    <P>Calling <B>SetXData</B> for an element type raises an error if the element is not graphical.
    If you're in doubt, firstly check the element's <A href="usproIsGraphical.htm">IsGraphical</A> property.</P>
    <P><B>Example</B></P>
    <PRE><CODE>    Dim Elem As Element
    Dim Xdata() As XDatum

    ' Build the XData array.

    AppendXDatum Xdata, msdXDatumTypeControlString, "{"
    AppendXDatum Xdata, msdXDatumTypePoint, Point3dFromXYZ(10, 10, 50)
    AppendXDatum Xdata, msdXDatumTypeLevel, "MyLevel"
    AppendXDatum Xdata, msdXDatumTypeControlString, "}"

    ' Then put it onto the element.

    Elem.SetXData "MyApplication", Xdata
    Elem.Rewrite ' Don't forget to do this!</CODE></PRE>
</P>
<P class=RL><B>Version</B></P>
<P>
08.00.04
</P>
</BODY>
</HTML>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IPrimitiveCommandEvents Object</TITLE>
<style>@import url(/Office.css);</style>
<link disabled rel="stylesheet" href="/MSOffice.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1 class=RH1><A NAME="usobjiprimitivecommandevents"></A>IPrimitiveCommandEvents Object</H1>

<P>
<P class=ALNSR>
<OBJECT ID="hhobj_1212" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:See Also">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjIPrimitiveCommandEventsC">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1213" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Example">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjIPrimitiveCommandEventsX">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1214" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Applies To">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjIPrimitiveCommandEventsA">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1215" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Properties">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjIPrimitiveCommandEventsP">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1216" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Methods">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjIPrimitiveCommandEventsM">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1217" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Events">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjIPrimitiveCommandEventsE">
</OBJECT>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_1218" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
        <param name="Command" value="ALink">
        <param name="Font" value="Verdana,8,1">
        <param name="Text" value="Text:Specifics">
        <param name="Flags" value=",,1">
        <param name="Item1" value="">
        <param name="Item2" value="usobjIPrimitiveCommandEventsS">
</OBJECT>
</P>

<P class=T>
A program that implements a new element-creation command should implement the interface <B>IPrimitiveCommandEvents</B>.
    <P>To start such a command, a program has to create an instance of the class that implements <B>IPrimitiveCommandEvents</B>. It
    must then call <A href="usobjCommandState.htm">CommandState</A>.<A href="usmthStartPrimitive.htm">StartPrimitive</A> supplying that object as the argument to the method.  The command
    remains the current command until another command is started. If the command does not keep another reference to
    that object, then the object is destroyed when MicroStation terminates the command.</P>
    <P>The event-handling methods of the <B>IPrimitiveCommandEvents</B> interface are <A href="usevtKeyin.htm">Keyin</A>, <A href="usevtDataPoint.htm">DataPoint</A>, <A href="usevtReset.htm">Reset</A>,
   <A href="usevtCleanup.htm">Cleanup</A>, <A href="usevtDynamics.htm">Dynamics</A> and <A href="usevtStart.htm">Start</A>.</P>
    <P>To start a new primitive and establish the object as the event handler, call <B>StartPrimitive</B> specifying the object that
    is to be the event handler.
    <P><B>StartPrimitive</B> first terminates the current command and sets up the default context for the new command.  This includes setting
    an <B>undo</B> boundary, clearing the current highlight, clearing the current tentative point, resetting AccuDraw's state, and
    calling the <B>Cleanup</B> event handler of the command that was active prior to the call to <B>StartPrimitive</B>. After initializing MicroStation's
    state, <B>StartPrimitive</B> calls the object's <B>Start</B> event.</P>
    <P>After MicroStation calls a command's <B>Start</B> event handler, that command is the active command until MicroStation calls the command's <B>Cleanup</B>
    event handler. MicroStation calls the <B>Cleanup</B> event handler regardless of whether the next command is a MicroStation command,
    or a command implemented in MDL or VBA.</P>
    <P>If the user enters a datapoint or reset while the command is active, MicroStation calls the command handler's <B>DataPoint</B> or <B>Reset</B>
    event handler. If the user enters a keyin and the call to <B>StartPrimitive</B> specifies that it wants keyins, then MicroStation
    calls the command handler's <B>Keyin</B> event handler.  Otherwise, it parses the keyin as a command.</P>
    <P>While a command is active, it may display rubber-banding when the user moves the cursor.  To display the rubber-banding, the
    command handler must call <B>CommandState</B>.<A href="usmthStartDynamics.htm">StartDynamics</A>.  That causes MicroStation to call the <B>Dynamics</B> event handler every time
    the cursor moves in a view.</P>
    <P>The active command may be suspended by a view manipulation command such as <B>Window Area</B>.  The command will not receive events while it is
    suspended.</P>
</P>
<P class=RL><B>Version</B></P>
<P>
08.00.00
</P>
</BODY>
</HTML>

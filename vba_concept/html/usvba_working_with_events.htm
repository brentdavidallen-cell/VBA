<!--ArborText, Inc., 1988-2002, v.4002-->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>MicroStation VBA Events</title>
<link href="/Office.css" type="text/css" rel="StyleSheet" media="screen"></head>
<body><div><h1>Working with MicroStation events</h1><p>The application object
contains two events, <a href="ms-its:MicroStationVBA.chm::/html/usevtondesignfileopened.htm">
OnDesignFileOpened</a> and <a href="ms-its:MicroStationVBA.chm::/html/usevtondesignfileclosed.htm">
OnDesignFileClosed</a>. These events are intended to allow a VBA program to
respond to the action of opening or closing a DGN file in MicroStation.</p><div><h2>
Using the OnDesignFileClosed event</h2><p>The OnDesignFileClosed event is
intended to let a MicroStation VBA program cleanup and save any data before
the design file is actually exited. The OnDesignFileClosed event passes the
path and name of the design file as an argument to the method receiving this
event.</p><p>The code for a class that uses this event to respond to the closing
of a design file would look like this:</p><p><code>Dim WithEvents hooks As
Application<br>Private Sub Class_Initialize()<br>&nbsp;&nbsp;&nbsp;Set hooks
= Application<br>End Sub<br><br>Private Sub hooks_OnDesignFileClosed (ByVal
dgnFileName As String)<br>&nbsp;&nbsp;&nbsp;MsgBox "Closing DGN file " + dgnFileName<br>End
Sub</code></p><p>This code is for a class named openClose, so it can only
be written in a class module. To run it, we create a sub procedure in a code
module that creates an object of this class. To make it easy to see the action
of the OnDesignFileClosed event, a command is issued to create and open a
new design file. This command causes the OnDesignFileClosed event to occur.
This sub procedure is written like this:</p><p><code>Public Sub makeNewFile()<br>&nbsp;&nbsp;&nbsp;Dim
eventMsg as openClose<br>&nbsp;&nbsp;&nbsp;Set eventMsg = New openClose<br>&nbsp;&nbsp;&nbsp;CreateNewDesignFile
DesignFileName, "newdgnfile.dgn", True<br>End Sub</code></p><p>Running the
makeNewFile sub procedure would cause a dialog box to appear that tells the
user the design file is closing. The same approach would be used to respond
to the OnDesignFileOpened event.</p><div><h3>WithEvents</h3><p>The mechanism
that allows the class to respond to the two events is the WithEvents declaration.
When the Dim statement is used to create the hooks variable as type Application,
the WithEvents keyword signifies that hooks will respond to some event. This
means that MicroStation will send event messages to the hooks object, but
it does not mean that hooks must respond to every event. The hooks object
can only respond to the event that we wrote the code for, the OnDesignFileClosed
event.</p><p>To make the hooks object respond to the OnDesignFileOpened event
we would add another sub procedure in the openClose class that looks like
this:</p><p><code>Private Sub hooks_OnDesignFileOpened (ByVal dgnFileName
As String)<br>&nbsp;&nbsp;&nbsp;MsgBox "Opening DGN file " + dgnFileName<br>End
Sub</code></p></div></div><div><h2>Other ways to respond to events</h2><p>
The Application object does not provide many events to respond to using the
WithEvents keyword. There are other events that your program can make use
of, but your program must implement an interface to receive these events.
For more information, see <a href="usvba_interface_programming.htm">Interface
Oriented Programming</a>.</p></div></div></body>
</html>

<!--ArborText, Inc., 1988-2002, v.4002-->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Recording and Revising a VBA macro</title>
<link href="/Office.css" type="text/css" rel="StyleSheet" media="screen"></head>
<body><div><h1>Recording and Revising a VBA macro</h1>
<p>In MicroStation CONNECT Edition, the ability to record macros has been removed.
Instead, users should record macros using the new Bentley Macro Recorder feature
and then "promote" those macros to VBA if you wish to edit or improve them
beyond what was recorded.  See the MicroStation help section "Bentley Macro Recorder" 
for information on how to do this.
<h2>Editing a recorded VBA macro</h2><p>When a macro is recorded
in VBA in MicroStation, the first data point entered is in absolute coordinates,
and all following data points are relative to this location. A recorded macro
that places a few line segments using the Place SmartLine tool might look
like this:</p></div><div><p><code>Sub Macro1()<br>&nbsp;&nbsp;&nbsp;Dim startPoint
As Point3d<br>&nbsp;&nbsp;&nbsp;Dim point As Point3d, point2 As Point3d<br>&nbsp;<br>'Start
a command<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendCommand "PLACE SMARTLINE
"<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Coordinates are in master units<br>&nbsp;&nbsp;&nbsp;startPoint.X
= 7.316122<br>&nbsp;&nbsp;&nbsp;startPoint.Y = -4.865692<br>&nbsp;&nbsp;&nbsp;startPoint.Z
= 0#<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Send a data point to the current command<br>&nbsp;&nbsp;&nbsp;point.X
= startPoint.X<br>&nbsp;&nbsp;&nbsp;point.Y = startPoint.Y<br>&nbsp;&nbsp;&nbsp;point.Z
= startPoint.Z<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendDataPoint point, 1<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Send
a data point to the current command<br>&nbsp;&nbsp;&nbsp;point.X = startPoint.X
+ 2.48087<br>&nbsp;&nbsp;&nbsp;point.Y = startPoint.Y + 3.0765<br>&nbsp;&nbsp;&nbsp;point.Z
= startPoint.Z<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendDataPoint point, 1<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Send
a data point to the current command<br>&nbsp;&nbsp;&nbsp;point.X = startPoint.X
+ 7.6503<br>&nbsp;&nbsp;&nbsp;point.Y = startPoint.Y + 1.9341<br>&nbsp;&nbsp;&nbsp;point.Z
= startPoint.Z<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendDataPoint point, 1<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Send
a reset to the current command<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendReset<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;CommandState.StartDefaultCommand<br>End
Sub</code></p></div><div><p>When this macro is played back it will redraw
the same elements in exactly the same location every time. This macro would
be much more useful if the location were determined by user input rather than
hard coded with specific coordinates. To do this, the macro must be edited
slightly to get the first location from the first data point entered by the
user. The changes to make this happen are shown in bold type in the code below.
</p></div><div><p><code>Sub Macro1()<br>&nbsp;&nbsp;&nbsp;Dim startPoint As
Point3d<br>&nbsp;&nbsp;&nbsp;Dim point As Point3d, point2 As Point3d<br>&nbsp;&nbsp;&nbsp;<b>
Dim userPnt As CadInputMessage</b><br>&nbsp;<br>'Start a command<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendCommand
"PLACE SMARTLINE "<br><br>&nbsp;&nbsp;&nbsp;<b>Set userPnt = CadInputQueue.GetInput(msdCadInputTypeDataPoint)
</b>&nbsp;<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Coordinates are in master units<br>&nbsp;&nbsp;&nbsp;startPoint.X
= <b>userPnt.point.X</b><br>&nbsp;&nbsp;&nbsp;startPoint.Y = <b>userPnt.point.Y
</b><br>&nbsp;&nbsp;&nbsp;startPoint.Z = <b>userPnt.point.Z</b><br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Send
a data point to the current command<br>&nbsp;&nbsp;&nbsp;point.X = startPoint.X<br>&nbsp;&nbsp;&nbsp;point.Y
= startPoint.Y<br>&nbsp;&nbsp;&nbsp;point.Z = startPoint.Z<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendDataPoint
point, 1<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Send a data point to the current
command<br>&nbsp;&nbsp;&nbsp;point.X = startPoint.X + 2.48087<br>&nbsp;&nbsp;&nbsp;point.Y
= startPoint.Y + 3.0765<br>&nbsp;&nbsp;&nbsp;point.Z = startPoint.Z<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendDataPoint
point, 1<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Send a data point to the current
command<br>&nbsp;&nbsp;&nbsp;point.X = startPoint.X + 7.6503<br>&nbsp;&nbsp;&nbsp;point.Y
= startPoint.Y + 1.9341<br>&nbsp;&nbsp;&nbsp;point.Z = startPoint.Z<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendDataPoint
point, 1<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;'Send a reset to the current command<br>&nbsp;&nbsp;&nbsp;CadInputQueue.SendReset<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;CommandState.StartDefaultCommand<br>End
Sub</code></p></div><div><p>Running this modified code will draw the same
elements as the recorded macro, only it will wait for a data point from the
user, and the elements are drawn at that location. Other attributes of the
elements could also be specified within the macro, such as color, level, line
weight, and line style.</p></div></div><div><h2>Playing back a VBA macro</h2><p>
Once a macro has been recorded, it can be &ldquo;played back&rdquo; to duplicate
the actions it recorded. This is the same as running a VBA macro that was
written using the editor. From within the editor, select the Run menu, then
choose Run Sub/User Form. The &lt;F5> function key is a keyboard shortcut
to this menu item. The recorded macro can also be played back from the <a
href="ms_its://vba_concept.chm::/html/usvba_macrosdb.htm">Macros dialog box
</a>.</p></div></div></body>
</html>

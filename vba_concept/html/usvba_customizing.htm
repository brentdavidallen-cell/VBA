<!--ArborText, Inc., 1988-2002, v.4002-->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Customizing MicroStation with Visual Basic</title>
<link href="/Office.css" type="text/css" rel="StyleSheet" media="screen"></head>
<body><div><h1>Customizing MicroStation with Visual Basic</h1><p>While Visual
Basic does not have access to the graphical components of MicroStation (menus,
windows, etc.), you can still easily customize MicroStation to use VBA programs
for your own purposes.</p><div><h2>Function keys</h2><p>MicroStation provides
a utility to customize the commands that are issued by pressing function keys
on the keyboard. You can use this feature to execute a VBA program by setting
a function key to issue the key-in command to load and run your VBA macro.
See <a href="usvba_keyins.htm">MicroStation VBA Key-ins</a> for the key-in
command to use.</p></div><div><h2>Custom tools</h2><p>Another place that a
VBA macro can be executed from is a custom tool icon. Using the Customize
dialog (File > Settings > Configuration > Customize), you can create a custom tool box
and tool icon. The tool icon passes a key-in command to MicroStation, so it
can easily be set to load and execute your VBA program. See <a href="usvba_keyins.htm">
MicroStation VBA Key-ins</a> for the key-in command to use.</p></div><div><h2>
Configuration Variables</h2><p>One area of MicroStation that can be accessed
by a VBA macro is configuration variables and their settings. By using the <a
href="ms-its:MicroStationVBA.chm::/html/usobjworkspace.htm">Workspace</a> object
you can read configuration variable values for the current workspace, and
create new configuration variables as well as delete them.</p><div><h3>Reading
a value from a configuration variable</h3><p>Reading a configuration variable
from a VBA program is reasonably easy if you know ahead of time which variable
you need to get the value of. The value of a configuration variable is returned
as a String, so it can be retrieved with the following lines:</p><p><code>
Dim configVarValue As String<br>configVarValue = ActiveWorkspace.ConfigurationVariableValue
("MS_DEF")</code></p><p>Usually, it is a good idea to check whether the configuration
variable you want to read is defined. To check this, the example above would
look like this:</p><p><code>Dim configVarValue As String<br>If IsConfigurationVariableDefined
("MS_DEF") Then<br>&nbsp;&nbsp;&nbsp;configVarValue = ActiveWorkspace.ConfigurationVariableValue
("MS_DEF")<br>End If</code></p><p><b>Note:</b> Configuration variable values
can contain other configuration variables. It is generally a good idea to
&ldquo;expand&rdquo; a configuration variable value if you need to use it
to find a file. Expanding means to substitute the values for any other configuration
variables in the value you just read. The <a href="ms-its:MicroStationVBA.chm::/html/usmthconfigurationvariablevalue.htm">
ConfigurationVariableValue</a> method will do this for you.</p><p>For additional
information, see the <a href="ms-its:MicroStationVBA.chm::/html/ussmpconfigvar.htm">
Configuration Variable Example</a>.</p></div><div><h3>Creating a new configuration
variable</h3><p>A new configuration variable is defined and set using the <a
href="ms-its:MicroStationVBA.chm::/html/usmthaddconfigurationvariable.htm">
AddConfigurationVariable</a> method of the ActiveWorkspace object. To create
a new configuration variable named &ldquo;AddedByVba&rdquo; use the following
lines:</p><p><code>If (IsConfigurationVariableDefined "AddedByVba" = False)
Then &nbsp;&nbsp;&nbsp;ActiveWorkspace.AddConfigurationVariable "AddedByVba",
"VBA DEFINITION"<br>End If</code></p><p>Before creating the variable, this
example checks to see if it already exists, and if not it creates the configuration
variable at the User level. All VBA changes to configuration variables are
at the User level.</p><p>See the <a href="ms-its:MicroStationVBA.chm::/html/ussmpconfigvar.htm">
Configuration Variable Example</a>.</p></div><div><h3>Deleting a configuration
variable</h3><p>A configuration variable can be deleted by using the <a href="ms-its:MicroStationVBA.chm::/html/usmthremoveconfigurationvariable.htm">
RemoveConfigurationVariable</a> method of the ActiveWorkspace object. Here
again, it is a good idea to check to see if the configuration variable is
defined before trying to delete it. To remove the configuration variable added
by the example above, use the following lines:</p><p><code>If IsConfigurationVariableDefined
"AddedByVba" Then<br>&nbsp;&nbsp;&nbsp;ActiveWorkspace.RemoveConfigurationVariable
"AddedByVba"<br>End If</code></p><p>See the <a href="ms-its:MicroStationVBA.chm::/html/ussmpconfigvar.htm">
Configuration Variable Example</a>.</p></div></div></div></body>
</html>
